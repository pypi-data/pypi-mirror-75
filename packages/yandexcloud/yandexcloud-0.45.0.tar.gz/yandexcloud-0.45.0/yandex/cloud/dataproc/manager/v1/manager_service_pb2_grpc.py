# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from yandex.cloud.dataproc.manager.v1 import manager_service_pb2 as yandex_dot_cloud_dot_dataproc_dot_manager_dot_v1_dot_manager__service__pb2


class DataprocManagerServiceStub(object):
  """Data Proc manager service defifnition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Report = channel.unary_unary(
        '/yandex.cloud.dataproc.manager.v1.DataprocManagerService/Report',
        request_serializer=yandex_dot_cloud_dot_dataproc_dot_manager_dot_v1_dot_manager__service__pb2.ReportRequest.SerializeToString,
        response_deserializer=yandex_dot_cloud_dot_dataproc_dot_manager_dot_v1_dot_manager__service__pb2.ReportReply.FromString,
        )


class DataprocManagerServiceServicer(object):
  """Data Proc manager service defifnition
  """

  def Report(self, request, context):
    """Sends a status report from a host
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DataprocManagerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Report': grpc.unary_unary_rpc_method_handler(
          servicer.Report,
          request_deserializer=yandex_dot_cloud_dot_dataproc_dot_manager_dot_v1_dot_manager__service__pb2.ReportRequest.FromString,
          response_serializer=yandex_dot_cloud_dot_dataproc_dot_manager_dot_v1_dot_manager__service__pb2.ReportReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'yandex.cloud.dataproc.manager.v1.DataprocManagerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
