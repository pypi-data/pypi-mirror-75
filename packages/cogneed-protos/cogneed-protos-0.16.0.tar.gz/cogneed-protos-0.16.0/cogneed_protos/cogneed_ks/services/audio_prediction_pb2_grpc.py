# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from cogneed_protos.cogneed_ks.services import audio_prediction_pb2 as cogneed__protos_dot_cogneed__ks_dot_services_dot_audio__prediction__pb2


class AudioPredictionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.predict = channel.stream_stream(
        '/ai.cogneed.cloud.speech.v1.AudioPredictionService/predict',
        request_serializer=cogneed__protos_dot_cogneed__ks_dot_services_dot_audio__prediction__pb2.AudioPredictionRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_cogneed__ks_dot_services_dot_audio__prediction__pb2.AudioPredictionResponse.FromString,
        )


class AudioPredictionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def predict(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AudioPredictionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'predict': grpc.stream_stream_rpc_method_handler(
          servicer.predict,
          request_deserializer=cogneed__protos_dot_cogneed__ks_dot_services_dot_audio__prediction__pb2.AudioPredictionRequest.FromString,
          response_serializer=cogneed__protos_dot_cogneed__ks_dot_services_dot_audio__prediction__pb2.AudioPredictionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.cogneed.cloud.speech.v1.AudioPredictionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
