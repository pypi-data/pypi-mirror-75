# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import marmot_type_pb2 as marmot__type__pb2


class FileServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.readHdfsFile = channel.stream_stream(
                '/proto.file.FileService/readHdfsFile',
                request_serializer=marmot__type__pb2.UpMessage.SerializeToString,
                response_deserializer=marmot__type__pb2.DownMessage.FromString,
                )
        self.writeHdfsFile = channel.stream_stream(
                '/proto.file.FileService/writeHdfsFile',
                request_serializer=marmot__type__pb2.UpMessage.SerializeToString,
                response_deserializer=marmot__type__pb2.DownMessage.FromString,
                )
        self.deleteHdfsFile = channel.unary_unary(
                '/proto.file.FileService/deleteHdfsFile',
                request_serializer=marmot__type__pb2.StringProto.SerializeToString,
                response_deserializer=marmot__type__pb2.BoolResponse.FromString,
                )
        self.walkRegularFileTree = channel.unary_stream(
                '/proto.file.FileService/walkRegularFileTree',
                request_serializer=marmot__type__pb2.StringProto.SerializeToString,
                response_deserializer=marmot__type__pb2.StringProto.FromString,
                )


class FileServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def readHdfsFile(self, request_iterator, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def writeHdfsFile(self, request_iterator, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteHdfsFile(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def walkRegularFileTree(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FileServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'readHdfsFile': grpc.stream_stream_rpc_method_handler(
                    servicer.readHdfsFile,
                    request_deserializer=marmot__type__pb2.UpMessage.FromString,
                    response_serializer=marmot__type__pb2.DownMessage.SerializeToString,
            ),
            'writeHdfsFile': grpc.stream_stream_rpc_method_handler(
                    servicer.writeHdfsFile,
                    request_deserializer=marmot__type__pb2.UpMessage.FromString,
                    response_serializer=marmot__type__pb2.DownMessage.SerializeToString,
            ),
            'deleteHdfsFile': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteHdfsFile,
                    request_deserializer=marmot__type__pb2.StringProto.FromString,
                    response_serializer=marmot__type__pb2.BoolResponse.SerializeToString,
            ),
            'walkRegularFileTree': grpc.unary_stream_rpc_method_handler(
                    servicer.walkRegularFileTree,
                    request_deserializer=marmot__type__pb2.StringProto.FromString,
                    response_serializer=marmot__type__pb2.StringProto.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.file.FileService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FileService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def readHdfsFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/proto.file.FileService/readHdfsFile',
            marmot__type__pb2.UpMessage.SerializeToString,
            marmot__type__pb2.DownMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def writeHdfsFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/proto.file.FileService/writeHdfsFile',
            marmot__type__pb2.UpMessage.SerializeToString,
            marmot__type__pb2.DownMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteHdfsFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.file.FileService/deleteHdfsFile',
            marmot__type__pb2.StringProto.SerializeToString,
            marmot__type__pb2.BoolResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def walkRegularFileTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/proto.file.FileService/walkRegularFileTree',
            marmot__type__pb2.StringProto.SerializeToString,
            marmot__type__pb2.StringProto.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
