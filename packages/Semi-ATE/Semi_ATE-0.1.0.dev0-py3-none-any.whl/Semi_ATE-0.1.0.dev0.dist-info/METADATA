Metadata-Version: 2.1
Name: Semi-ATE
Version: 0.1.0.dev0
Summary: Framework for Semiconductor ATE testing projects
Home-page: UNKNOWN
Author: The Semi-ATE Project Contributors
Author-email: ate.organization@gmail.com
License: GPL2
Keywords: Semiconductor ATE Automatic Test Equipment
Platform: Windows
Platform: Linux
Platform: Mac OS-X
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)
Classifier: Topic :: Scientific/Engineering :: Human Machine Interfaces
Classifier: Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Quality Assurance

# Semi-ATE
<ins>**Semi**</ins>conductor <ins>**A**</ins>utomated <ins>**T**</ins>est <ins>**E**</ins>quipment

`Semi-ATE` is a tester- and instrument **AGNOSTIC** framework for **<ins>Semi</ins>conductor <ins>ATE</ins> ASIC testing** projects.

This means that the system is **not** build around a specific instrument (let's consider an ATE tester for a moment as a super instrumentðŸ˜‹), it rather focuses on
organizing semiconductor testing in such a way that **all** use- (and special) corner cases have their well known place. This enables the users (read: DE's, TCE's, TE's & PE's) to focus on the **REAL** work, being writing fast and stable tests. Organizing tests into test-programs and test-programs in to flows is handled by wizards, so the only code that needs writing is the actual test! (motto: [Code is our enemy](http://www.skrenta.com/2007/05/code_is_our_enemy.html))

The `Semi-ATE` package is writen purely in Python (noarch) and provides besides libraries also a plugin to the [Spyder](https://www.spyder-ide.org/) IDE.

Still interested? Visit the [wiki](https://github.com/ate-org/Semi-ATE/wiki). 


