# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from ndlapi.api._pyproto import api_common_pb2 as api__common__pb2


class BodyTrackerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.process_video_stream = channel.stream_stream(
        '/cul.BodyTracker/process_video_stream',
        request_serializer=api__common__pb2.ProcessingRequest.SerializeToString,
        response_deserializer=api__common__pb2.ProcessingResponse.FromString,
        )
    self.process_images_stream = channel.stream_stream(
        '/cul.BodyTracker/process_images_stream',
        request_serializer=api__common__pb2.PackProcessingRequest.SerializeToString,
        response_deserializer=api__common__pb2.PackProcessingResponse.FromString,
        )


class BodyTrackerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def process_video_stream(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def process_images_stream(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BodyTrackerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'process_video_stream': grpc.stream_stream_rpc_method_handler(
          servicer.process_video_stream,
          request_deserializer=api__common__pb2.ProcessingRequest.FromString,
          response_serializer=api__common__pb2.ProcessingResponse.SerializeToString,
      ),
      'process_images_stream': grpc.stream_stream_rpc_method_handler(
          servicer.process_images_stream,
          request_deserializer=api__common__pb2.PackProcessingRequest.FromString,
          response_serializer=api__common__pb2.PackProcessingResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'cul.BodyTracker', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
