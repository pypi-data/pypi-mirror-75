Metadata-Version: 2.1
Name: yuuno-core
Version: 1.3.1
Summary: Yuuno-Core - Extract frames from videos.
Home-page: https://github.com/stuxcrystal/yuuno-core
Author: stuxcrystal
Author-email: stuxcrystal@encode.moe
License: GNU Lesser General Public License v3 (LGPLv3)
Description: =====
        Yuuno
        =====
        
        
        .. code::
        
            __   __
            \ \ / /
             \ V /   _ _   _ _ __   ___
              \ / | | | | | | '_ \ / _ \
              | | |_| | |_| | | | | (_) |
              \_/\__,_|\__,_|_| |_|\___/
        
        
        
        
        
        .. image:: https://img.shields.io/pypi/v/yuuno.svg
                :target: https://pypi.python.org/pypi/yuuno
        
        .. image:: https://circleci.com/gh/Irrational-Encoding-Wizardry/yuuno-core.svg?style=svg
            :target: https://circleci.com/gh/Irrational-Encoding-Wizardry/yuuno-core
        
        
        Yuuno = Jupyter + VapourSynth
        
        * Free software: MIT license
        * Documentation: https://yuuno.encode.moe/
        
        Start your journey here:
        ------------------------
        * `Installation <https://yuuno.encode.moe/installation.html>`_
        * `Usage <https://yuuno.encode.moe/usage.html>`_
        
        Features
        --------
        
        * Automatic importing of a VapourSynth-core as well as the VapourSynth-module itself.
        * Inline-rendering of the first frame of a clip.
        * Encoding of VapourSynth-Clips from the Notebook/IPython-shell
        * Interactive Clip Introspection using IPython-magics (%preview, %diff, %compare and %inspect)
        
        Credits
        -------
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        
        
        
        =======
        History
        =======
        
        1.3.0 (Parian)
        --------------
        
        * Support for changes brought in by R51
        
        1.2.0 (Chubster)
        ----------------
        
        * Internal Stuff required for Yuuno4IPython.
        
        1.1.0 (Skidmark)
        ----------------
        
        * `yuuno` - A command for running and setting up stuff.
        
        1.0.2 (Khepri)
        --------------
        
        * Made compatible with VapourSynth R45
        
        1.0.1 (Khepri)
        --------------
        
        * Fixed incompatibility with Python 3.7
        
        1.0.0 (Khepri)
        --------------
        
        * Split up Yuuno into Yuuno for IPython and Yuuno-core
        * Allow autodiscover of additional Yuuno-extensions.
        * Allow autodiscover of additional Yuuno-environments.
        * Fix incorrect endianness of COMPAT-Formats in MAC OS X.
        * Implement "Script"-Environments. This allows to use VSScript or subprocess. This allows to use Yuuno for editors.
        * Hook the VapourSynth log-system.
        
        0.8.0 (Glastig Uaine)
        ---------------------
        
        * Now I name my releases because I feel like it.
        * Fixed color profile not included in PNGs by default. Do so by emitting an sRGB-chunk.
        * Completed first version of Comm-Protocol for Yuuno-Kernels.
        * Added progressbar to %encode-magic.
        * Added support for R41+ alpha clips. (Also with R43+ AlphaOutputTuple support: vapoursynth/#362)
        * Use %show for IPython. It will convert the clip to a PIL image. (Can also work for Alpha-Tuples pre R41).
        
        0.7.0
        -----
        
        * Added support for clips with variable video formats
        * Added support for zlib compression and ICCP-chunk on PNG outputter
        
        0.6.0 (2017-07-24)
        ------------------
        
        * `%runvpy` can now return the outputs of a vapoursynth-script (.vpy) as a dict.
        * Settings of VapourSynth cores are now exposed as configuration variables
        * [Misc] Extracted `%encode` and stuck it inside its own sub-package.
        
        0.5.0 (2017-06-18)
        ------------------
        
        Rewrite of the yuuno codebase to prepare for Yuuno 1.0.0-release.
        
        * You don't have to do `%yuuno install` anymore.
        * To configure settings while in your IPython-shell, use the %config-magic, which is available in any IPython installation.
        * The minimum Python-version of Yuuno is Python 3.6. Make sure you are running this version when upgrading.
        * Using `%unload_ext yuuno` you can now completely deactivate Yuuno on your notebook.
        * The `%encode`-magic has become more robust now.
        * There is a `%render`-magic now, which does everything %encode does but stores the output into a io.BytesIO.
        * All interactive applications are now IPython-magics.
        * %preview returns a Preview-object. By changing the clip-Attribute of these objects, you can change the clip without losing the frame number.
        
        0.4.0 (2017-05-18)
        ------------------
        
        * Allow `vapoursynth.VideoFrames` to be inline-rendered.
        * Fixed incorrect aspect-ratio on all `ipywidget` based features.
        * Add f-string parsing inside `%encode`. (Will fallback to regular string.format for Python < 3.6) [thanks for the idea @ðŸŽŒeXmendiC]
        * Switched to Jinja2 Templates for Raw-HTML output
        * Omit iCCP-chunk since apparently the csp has to be set manually by the user on media players. Of course it can be changed back at any time.
        
        0.3.0 (2017-03-20)
        ------------------
        
        * An ICCP-chunk is now sent along with the PNG. Currently the default is the 709-CSP ICC. Color-Managed browsers will honor this chunk.
        * The variables `core` (referencing the current VS-Core) and `vs` (as a referece to the vapoursynth) will now be pushed to the user-namespace on Yuuno activation.
        * `%yuuno install` is now the installation command
        * `%yuuno version` shows the current version of yuuno
        * `%yuuno help` shows the help for Yuuno.
        * `%yuuno get` and `%yuuno set` can be used for configuring Yuuno.
        * You have to use `%load_ext yuuno` for initiating yuuno now.
        
Keywords: yuuno
Platform: UNKNOWN
Classifier: Natural Language :: English
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Other Audience
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Multimedia :: Video
Classifier: Topic :: Multimedia :: Video :: Display
Classifier: Topic :: Multimedia :: Video :: Non-Linear Editor
Provides-Extra: vapoursynth
