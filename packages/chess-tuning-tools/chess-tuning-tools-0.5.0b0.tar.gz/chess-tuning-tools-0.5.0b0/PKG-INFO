Metadata-Version: 1.2
Name: chess-tuning-tools
Version: 0.5.0b0
Summary: A collection of tools for local and distributed tuning of chess engines.
Home-page: https://github.com/kiudee/chess-tuning-tools
Author: Karlson Pfannschmidt
Author-email: kiudee@mail.upb.de
License: Apache Software License 2.0
Description: ==================
        Chess Tuning Tools
        ==================
        
        
        .. image:: https://img.shields.io/pypi/v/chess-tuning-tools.svg
                :target: https://pypi.python.org/pypi/chess-tuning-tools
        
        .. image:: https://img.shields.io/travis/kiudee/chess-tuning-tools.svg
                :target: https://travis-ci.org/kiudee/chess-tuning-tools
        
        .. image:: https://readthedocs.org/projects/chess-tuning-tools/badge/?version=latest
                :target: https://chess-tuning-tools.readthedocs.io/en/latest/?badge=latest
                :alt: Documentation Status
        
        
        
        
        A collection of tools for local and distributed tuning of chess engines.
        
        
        * Free software: Apache Software License 2.0
        * Documentation: https://chess-tuning-tools.readthedocs.io.
        
        
        Features
        --------
        
        * Optimization of chess engines using state-of-the-art Bayesian optimization.
        * Support for automatic visualization of the optimization landscape.
        * Scoring matches using the pentanomial model for paired openings.
        
        Quick Start
        -----------
        
        In order to be able to start the tuning, first create a python
        environment and install chess-tuning-tools by typing::
        
           pip install chess-tuning-tools
        
        Furthermore, you need to have `cutechess-cli <https://github.com/cutechess/cutechess>`_
        in the path. The tuner will use it to run matches.
        
        To execute the local tuner, simply run::
        
           tune local -c tuning_config.json
        
        Take a look at the `usage instructions`_ and the `example configurations`_ to
        learn how to set up the ``tuning_config.json`` file.
        
        
        Distributed tuning
        ------------------
        
        The distributed tuning framework is currently not actively supported.
        To be able to run the tuning client, you need the following directory structure::
        
           folder/
           |---- networks/
           |     |---- networkid
           |---- openings/
           |     |---- ...
           |     |---- openings.pgn
           |     |---- ...
           |---- dbconfig.json
           |---- engine1[.exe]
           |---- engine2[.exe]
        
        Finally, the tuning client can be started as follows::
        
           cd path/to/folder
           tune run-client dbconfig.json
        
        The client can be terminated gracefully by inputting ctrl-c once or terminated
        immediately by sending it twice.
        
        You will also need to run a PostgreSQL database, which the server will use to
        post jobs for the clients to fetch and the clients to report their results to.
        
        
        Credits
        -------
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        .. _example configurations: https://github.com/kiudee/chess-tuning-tools/tree/master/examples
        .. _usage instructions: https://chess-tuning-tools.readthedocs.io/en/latest/usage.html
        
        
        =======
        History
        =======
        
        0.5.0-beta (2020-08-03)
        -----------------------
        * Add support for parameter range reduction. Since this potentially requires
          discarding some of the data points, it will also save a backup.
        
        0.4 (2020-08-02)
        ----------------
        * Add new standalone tuning script. With this it is possible to tune parameters
          of an engine without having to set up the distributed tuning framework.
          Usage instructions and example configurations are included.
        
        0.3 (2020-03-02)
        ----------------
        
        * Support for round-flat prior distributions
        * Fix parsing of priors and benchmark results
        
        0.2.0 (2020-02-10)
        ------------------
        
        * Completely new database implemented in SQLAlchemy.
        * Pentanomial scoring of matches, accounting for the paired openings and different draw rates of time controls.
        
        0.1.6 (2020-02-02)
        ------------------
        
        * Allow timed termination of the client by the option ``--terminate-after``
        
        0.1.5 (2020-02-02)
        ------------------
        
        * Support for non-increment time controls
        
        0.1.4 (2020-02-02)
        ------------------
        
        * Allow graceful termination of tuning-client using ctrl-c.
        
        0.1.3 (2020-02-01)
        ------------------
        
        * Implement probabilistic load balancing support in the clients.
        
        0.1.2 (2020-02-01)
        ------------------
        
        * Simplified tuning client tutorial and logging.
        
        0.1.0 (2020-01-31)
        ------------------
        
        * First release on PyPI.
        
Keywords: chess,tuning,optimization,engine
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.7
