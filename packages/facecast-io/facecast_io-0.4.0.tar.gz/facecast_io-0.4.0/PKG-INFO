Metadata-Version: 2.1
Name: facecast-io
Version: 0.4.0
Summary: Unofficial API for facecast.io
Home-page: https://github.com/skhalymon/facecast-io
License: MIT
Keywords: facecast,api-client
Author: Serhii Khalymon
Author-email: sergiykhalimon@gmail.com
Requires-Python: >=3.7,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Multimedia :: Sound/Audio
Classifier: Topic :: Software Development :: Libraries
Requires-Dist: httpx (>=0.12.1,<0.13.0)
Requires-Dist: pydantic (>=1.6.1,<2.0.0)
Requires-Dist: pyquery (>=1.4.1,<2.0.0)
Requires-Dist: retry (>=0.9.2,<0.10.0)
Requires-Dist: typing (>=3.7,<4.0); python_version < "3.8"
Requires-Dist: typing_extensions (>=3.7,<4.0); python_version < "3.8"
Requires-Dist: yarl (>=1.4.2,<2.0.0)
Project-URL: Repository, https://github.com/skhalymon/facecast-io
Description-Content-Type: text/x-rst

***********
Facecast IO
***********

Unofficial API client to https://facecast.io service
####################################################

Installation
************

:pip: pip install facecast-io
:poetry: poetry add facecast-io

Usage
*****

::

    api = FacecastAPI(os.environ["FACECAST_USERNAME"], os.environ["FACECAST_PASSWORD"])
    # display available devices
    print(api.devices)

    # get device by name
    d = api.devices['Dev name']

    # delete specific device and all devices
    api.devices.delete_device('Dev name')
    api.devices.delete_all()

    # create device
    api.devices.create_device('Dev name')

    # display device server url and key
    print(d.input_params)

    # display outputs of device
    print(d.outputs)

    # create new output
    d.create_output("Youtube", 'rtmp://a.youtube.com', 'youtube-key')

    # start/stop output
    d.start_outputs()
    d.stop_outputs()

    # delete all outputs
    d.delete_outputs()




