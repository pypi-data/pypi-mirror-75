<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>Parameter Estimation in Dynamic Models &mdash; BIP - Bayesian Inference with Python v0.3.25 documentation</title>
    <link rel="stylesheet" href="_static/sphinxdoc.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" />
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '#',
        VERSION:     '0.3.25',
        COLLAPSE_MODINDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>
    <script type="text/javascript" src="_static/jquery.js"></script>
    <script type="text/javascript" src="_static/doctools.js"></script>
    <link rel="top" title="BIP - Bayesian Inference with Python v0.3.25 documentation" href="index.html" />
    <link rel="next" title="Stochastic Differential Equations" href="sde.html" />
    <link rel="prev" title="Overview" href="overview.html" /> 
  </head>
  <body>
    <div class="related">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="genindex.html" title="General Index"
             accesskey="I">index</a></li>
        <li class="right" >
          <a href="sde.html" title="Stochastic Differential Equations"
             accesskey="N">next</a> |</li>
        <li class="right" >
          <a href="overview.html" title="Overview"
             accesskey="P">previous</a> |</li>
        <li><a href="index.html">BIP</a> &raquo;</li> 
      </ul>
    </div>
      <div class="sphinxsidebar">
        <div class="sphinxsidebarwrapper">
            <p class="logo"><a href="index.html">
              <img class="logo" src="_static/BIP.png" alt="Logo"/>
            </a></p>
            <h3><a href="index.html">Table Of Contents</a></h3>
            <ul>
<li><a class="reference external" href="#">Parameter Estimation in Dynamic Models</a><ul>
<li><a class="reference external" href="#single-session-retrospective-estimation">Single Session Retrospective estimation</a><ul>
<li><a class="reference external" href="#example-usage">Example Usage</a></li>
<li><a class="reference external" href="#stochastic-model-example">Stochastic Model Example</a></li>
</ul>
</li>
<li><a class="reference external" href="#iterative-estimation-and-forecast">Iterative Estimation and Forecast</a></li>
<li><a class="reference external" href="#references">References</a></li>
</ul>
</li>
</ul>

            <h4>Previous topic</h4>
            <p class="topless"><a href="overview.html"
                                  title="previous chapter">Overview</a></p>
            <h4>Next topic</h4>
            <p class="topless"><a href="sde.html"
                                  title="next chapter">Stochastic Differential Equations</a></p>
            <h3>This Page</h3>
            <ul class="this-page-menu">
              <li><a href="_sources/paramest.txt"
                     rel="nofollow">Show Source</a></li>
            </ul>
          <div id="searchbox" style="display: none">
            <h3>Quick search</h3>
              <form class="search" action="search.html" method="get">
                <input type="text" name="q" size="18" />
                <input type="submit" value="Go" />
                <input type="hidden" name="check_keywords" value="yes" />
                <input type="hidden" name="area" value="default" />
              </form>
              <p class="searchtip" style="font-size: 90%">
              Enter search terms or a module, class or function name.
              </p>
          </div>
          <script type="text/javascript">$('#searchbox').show(0);</script>
        </div>
      </div>

    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body">
            
  <div class="section" id="parameter-estimation-in-dynamic-models">
<h1>Parameter Estimation in Dynamic Models<a class="headerlink" href="#parameter-estimation-in-dynamic-models" title="Permalink to this headline">¶</a></h1>
<p>A growing theme in mathematical modeling is uncertainty analysis. The Melding Module provides a Bayesian framework to analyze uncertainty in mathematical models. It includes tools that allow modellers to integrate Prior information about the model&#8217;s parameters and variables into the model, in order to explore the full uncertainty associated with a model.</p>
<p>This framework is inspired on the original Bayesian Melding paper by Poole and Raftery <a class="footnote-reference" href="#id2" id="id1">[1]</a>, but extended to handle dynamical systems and different posterior sampling mechanisms, i.e., the user has the choice to use Sampling Importance resampling, Approximate Bayesian computations or MCMC.</p>
<p>Once a model is thus parameterized, we can simulate the model, with full uncertainty representation and also fit the model to available data to reduce that uncertaity. Markov chain Monte Carlo algorithms are at the core of the framework, which requires a large number of simulations of the models in order to explore parameter space.</p>
<div class="section" id="single-session-retrospective-estimation">
<h2>Single Session Retrospective estimation<a class="headerlink" href="#single-session-retrospective-estimation" title="Permalink to this headline">¶</a></h2>
<p>Frequently, we have a complete time series corresponding to one or more state variables of our dynamic model. In such cases it may be interesting to use this information, to estimate the parameter values which maximize the fit of our model to the data. Below are examples of such inference situations.</p>
<div class="section" id="example-usage">
<h3>Example Usage<a class="headerlink" href="#example-usage" title="Permalink to this headline">¶</a></h3>
<p>This first example includes a simple ODE (an SIR epidemic model) model which is fitted against simulated data to which noise is added:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="c">#-*- coding: utf-8 -*-</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="sd">Parameter estimation and series forcasting based on simulated data with moving window.</span>
<span class="sd">Deterministic model</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="c">#</span>
<span class="c"># Copyright 2009- by Flávio Codeço Coelho</span>
<span class="c"># License gpl v3</span>
<span class="c">#</span>
<span class="kn">from</span> <span class="nn">BIP.Bayes.Melding</span> <span class="kn">import</span> <span class="n">FitModel</span>
<span class="kn">from</span> <span class="nn">scipy.integrate</span> <span class="kn">import</span> <span class="n">odeint</span>
<span class="kn">import</span> <span class="nn">scipy.stats</span> <span class="kn">as</span> <span class="nn">st</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>

<span class="n">beta</span> <span class="o">=</span> <span class="mi">1</span> <span class="c">#Transmission coefficient</span>
<span class="n">tau</span> <span class="o">=</span> <span class="o">.</span><span class="mi">2</span> <span class="c">#infectious period. FIXED</span>
<span class="n">tf</span> <span class="o">=</span> <span class="mi">36</span>
<span class="n">y0</span> <span class="o">=</span> <span class="p">[</span><span class="o">.</span><span class="mi">999</span><span class="p">,</span><span class="mf">0.001</span><span class="p">,</span><span class="mf">0.0</span><span class="p">]</span>
<span class="k">def</span> <span class="nf">model</span><span class="p">(</span><span class="n">theta</span><span class="p">):</span>
    <span class="n">beta</span> <span class="o">=</span> <span class="n">theta</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">def</span> <span class="nf">sir</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">t</span><span class="p">):</span>
        <span class="sd">&#39;&#39;&#39;ODE model&#39;&#39;&#39;</span>
        <span class="n">S</span><span class="p">,</span><span class="n">I</span><span class="p">,</span><span class="n">R</span> <span class="o">=</span> <span class="n">y</span>
        <span class="k">return</span>  <span class="p">[</span><span class="o">-</span><span class="n">beta</span><span class="o">*</span><span class="n">I</span><span class="o">*</span><span class="n">S</span><span class="p">,</span> <span class="c">#dS/dt</span>
                <span class="n">beta</span><span class="o">*</span><span class="n">I</span><span class="o">*</span><span class="n">S</span> <span class="o">-</span> <span class="n">tau</span><span class="o">*</span><span class="n">I</span><span class="p">,</span> <span class="c">#dI/dt</span>
                <span class="n">tau</span><span class="o">*</span><span class="n">I</span><span class="p">]</span> <span class="c">#dR/dt</span>
    <span class="n">y</span> <span class="o">=</span> <span class="n">odeint</span><span class="p">(</span><span class="n">sir</span><span class="p">,</span><span class="n">inits</span><span class="p">,</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">tf</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span><span class="c">#np.arange(t0,tf,step))</span>
    <span class="k">return</span> <span class="n">y</span>
    
<span class="n">F</span> <span class="o">=</span> <span class="n">FitModel</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span><span class="n">y0</span><span class="p">,</span><span class="n">tf</span><span class="p">,[</span><span class="s">&#39;beta&#39;</span><span class="p">],[</span><span class="s">&#39;S&#39;</span><span class="p">,</span><span class="s">&#39;I&#39;</span><span class="p">,</span><span class="s">&#39;R&#39;</span><span class="p">],</span>
            <span class="n">wl</span><span class="o">=</span><span class="mi">36</span><span class="p">,</span><span class="n">nw</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">verbose</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">burnin</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">F</span><span class="o">.</span><span class="n">set_priors</span><span class="p">(</span><span class="n">tdists</span><span class="o">=</span><span class="p">[</span><span class="n">st</span><span class="o">.</span><span class="n">norm</span><span class="p">],</span><span class="n">tpars</span><span class="o">=</span><span class="p">[(</span><span class="mf">1.1</span><span class="p">,</span><span class="o">.</span><span class="mi">2</span><span class="p">)],</span><span class="n">tlims</span><span class="o">=</span><span class="p">[(</span><span class="mf">0.5</span><span class="p">,</span><span class="mf">1.5</span><span class="p">)],</span>
    <span class="n">pdists</span><span class="o">=</span><span class="p">[</span><span class="n">st</span><span class="o">.</span><span class="n">uniform</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">,</span><span class="n">ppars</span><span class="o">=</span><span class="p">[(</span><span class="mi">0</span><span class="p">,</span><span class="o">.</span><span class="mi">1</span><span class="p">),(</span><span class="mi">0</span><span class="p">,</span><span class="o">.</span><span class="mi">1</span><span class="p">),(</span><span class="o">.</span><span class="mi">8</span><span class="p">,</span><span class="o">.</span><span class="mi">2</span><span class="p">)],</span><span class="n">plims</span><span class="o">=</span><span class="p">[(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)]</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>
<span class="n">d</span> <span class="o">=</span> <span class="n">model</span><span class="p">([</span><span class="mf">1.0</span><span class="p">])</span> <span class="c">#simulate some data</span>
<span class="n">noise</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="n">norm</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mf">0.01</span><span class="p">)</span><span class="o">.</span><span class="n">rvs</span><span class="p">(</span><span class="mi">36</span><span class="p">)</span>
<span class="n">dt</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;I&#39;</span><span class="p">:</span><span class="n">d</span><span class="p">[:,</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">noise</span><span class="p">}</span> <span class="c"># add noise</span>
<span class="n">F</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">dt</span><span class="p">,</span><span class="s">&#39;MCMC&#39;</span><span class="p">,</span><span class="n">likvar</span><span class="o">=</span><span class="mf">1e-4</span><span class="p">,</span><span class="n">pool</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span><span class="n">monitor</span><span class="o">=</span><span class="p">[])</span>
<span class="c">#==Uncomment the line below to see plots of the results</span>
<span class="n">F</span><span class="o">.</span><span class="n">plot_results</span><span class="p">()</span>
</pre></div>
</div>
<p>The code above starts by defining the models parameters and initial conditions, and a function which takes in the parameters runs the model and returns the output.</p>
<p>After that, we Instantiate our fitting Object:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">F</span> <span class="o">=</span> <span class="n">FitModel</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span><span class="n">model</span><span class="p">,</span><span class="n">y0</span><span class="p">,</span><span class="n">tf</span><span class="p">,[</span><span class="s">&#39;beta&#39;</span><span class="p">],[</span><span class="s">&#39;S&#39;</span><span class="p">,</span><span class="s">&#39;I&#39;</span><span class="p">,</span><span class="s">&#39;R&#39;</span><span class="p">],</span>
            <span class="n">wl</span><span class="o">=</span><span class="mi">36</span><span class="p">,</span><span class="n">nw</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">verbose</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">burnin</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</pre></div>
</div>
<p>Here we have to pass a few arguments: the first (<tt class="docutils literal"><span class="pre">K=300</span></tt>) is the number of samples we will take from the joint prior distribution of the parameters to run the inference. The second one (<tt class="docutils literal"><span class="pre">model</span></tt>) is the callable(function) which corresponds to the model you want to fit to data. Then you have the initial condition vector(<tt class="docutils literal"><span class="pre">inits=y0</span></tt>), the list of parameter names (<tt class="docutils literal"><span class="pre">thetanames</span> <span class="pre">=</span> <span class="pre">['beta']</span></tt>), the list of variable names (<tt class="docutils literal"><span class="pre">phinames=['S','I','R']</span></tt>), inference window length (<tt class="docutils literal"><span class="pre">wl=36</span></tt>), number of juxtaposed windows (<tt class="docutils literal"><span class="pre">nw=1</span></tt>), verbosity flag (<tt class="docutils literal"><span class="pre">verbose=False</span></tt>) and finally the number of burnin samples (<tt class="docutils literal"><span class="pre">burnin=1000</span></tt>), which is only needed for if the inference method chosen is <tt class="docutils literal"><span class="pre">MCMC</span></tt>.</p>
<p>One should always have <tt class="docutils literal"><span class="pre">verbose=True</span></tt> on a first fitting run of a model or if the simulations seems to be taking longer than expected. When <tt class="docutils literal"><span class="pre">verbose</span></tt> is true, printed and graphical is generated regarding the behavior of fitting, which can be useful to fine tune its parameters.</p>
<p>The next line of code also carries a lot of relevant information about the inference: the specification of the prior distributions. By now you must have noticed that not all parameters included in the model need to be included in the analysis. any number of them except for one can be set constant, which is what happens with the parameter <tt class="docutils literal"><span class="pre">tau</span></tt> in this example:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">F</span><span class="o">.</span><span class="n">set_priors</span><span class="p">(</span><span class="n">tdists</span><span class="o">=</span><span class="p">[</span><span class="n">st</span><span class="o">.</span><span class="n">norm</span><span class="p">],</span><span class="n">tpars</span><span class="o">=</span><span class="p">[(</span><span class="mf">1.1</span><span class="p">,</span><span class="o">.</span><span class="mi">2</span><span class="p">)],</span><span class="n">tlims</span><span class="o">=</span><span class="p">[(</span><span class="mf">0.5</span><span class="p">,</span><span class="mf">1.5</span><span class="p">)],</span>
    <span class="n">pdists</span><span class="o">=</span><span class="p">[</span><span class="n">st</span><span class="o">.</span><span class="n">uniform</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">,</span><span class="n">ppars</span><span class="o">=</span><span class="p">[(</span><span class="mi">0</span><span class="p">,</span><span class="o">.</span><span class="mi">1</span><span class="p">),(</span><span class="mi">0</span><span class="p">,</span><span class="o">.</span><span class="mi">1</span><span class="p">),(</span><span class="o">.</span><span class="mi">8</span><span class="p">,</span><span class="o">.</span><span class="mi">2</span><span class="p">)],</span><span class="n">plims</span><span class="o">=</span><span class="p">[(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)]</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>
</pre></div>
</div>
<p>here we set the prior distributions for the theta (the model&#8217;s parameters) and phi (the model&#8217;s variables). <tt class="docutils literal"><span class="pre">tdists</span></tt>, <tt class="docutils literal"><span class="pre">tpars</span></tt> and <tt class="docutils literal"><span class="pre">tlims</span></tt> are theta&#8217;s distributions, parameters, and ranges. For example here we use a Normal distribution (<tt class="docutils literal"><span class="pre">st.norm</span></tt>) for <tt class="docutils literal"><span class="pre">beta</span></tt>, with mean and standard deviation equal to 1.1 and .2, respectively. we also set the range of <tt class="docutils literal"><span class="pre">beta</span></tt> to be from 0.5 to 1.5. We do the same for phi.</p>
<p>The remaining lines just generate some simulated data to fit the model with, run the inference and plot the results which should include plots like this:</p>
<div class="figure">
<img alt="_images/fit_series.png" src="_images/fit_series.png" style="width: 15cm;" />
<p class="caption">Series posterior distributions. Colored areas represent 95% credible intervals.</p>
</div>
<div class="figure">
<img alt="_images/fit_par.png" src="_images/fit_par.png" style="width: 15cm;" />
</div>
<p>One important argument in the run call, is the likvar, Which is the initial value for the likelihood variance. Try to increase its value if the acceptance ratio of the markov chain is too llow. Ideal levels for the acceptance ratio should be between 0.3 and 0.5.</p>
<p>The code for the above example can be found in the examples directory of the BIP distribution as <a href="_downloads/deterministic.py"><strong class="xref">deterministic.py</strong></a></p>
</div>
<div class="section" id="stochastic-model-example">
<h3>Stochastic Model Example<a class="headerlink" href="#stochastic-model-example" title="Permalink to this headline">¶</a></h3>
<p>This example fits a stochastic model to simulated data. It uses the <a class="reference external" href="sde.html#sde"><em>SDE</em></a> package of BIP:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="c">#-*- coding:utf-8 -*-</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="sd">Parameter estimation and series forcasting based on simulated data with moving window.</span>
<span class="sd">Stochastic model</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="c">#</span>
<span class="c"># Copyright 2009- by Flávio Codeço Coelho</span>
<span class="c"># License gpl v3</span>
<span class="c">#</span>
<span class="kn">from</span> <span class="nn">BIP.SDE.gillespie</span> <span class="kn">import</span> <span class="n">Model</span>
<span class="kn">from</span> <span class="nn">BIP.Bayes.Melding</span> <span class="kn">import</span> <span class="n">FitModel</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
<span class="kn">from</span> <span class="nn">scipy</span> <span class="kn">import</span> <span class="n">stats</span> <span class="k">as</span> <span class="n">st</span>

<span class="n">mu</span> <span class="o">=</span> <span class="mf">0.0</span> <span class="c">#birth and death rate.FIXED</span>
<span class="n">beta</span> <span class="o">=</span> <span class="mf">0.00058</span> <span class="c">#Transmission rate</span>
<span class="n">eta</span> <span class="o">=</span> <span class="o">.</span><span class="mi">5</span> <span class="c">#infectivity of asymptomatic infections relative to clinical ones. FIXED</span>
<span class="n">epsilon</span> <span class="o">=</span> <span class="o">.</span><span class="mi">1</span> <span class="c">#latency period </span>
<span class="n">alpha</span> <span class="o">=</span> <span class="o">.</span><span class="mi">2</span> <span class="c">#Probability of developing clinical influenza symptoms</span>
<span class="n">sigma</span> <span class="o">=</span> <span class="o">.</span><span class="mi">5</span> <span class="c">#reduced risk of re-infection after recovery</span>
<span class="n">tau</span> <span class="o">=</span> <span class="o">.</span><span class="mo">01</span> <span class="c">#infectious period. FIXED</span>
<span class="c"># Initial conditions</span>
<span class="k">global</span> <span class="n">inits</span><span class="p">,</span><span class="n">tf</span>
<span class="n">tf</span><span class="o">=</span> <span class="mi">140</span>
<span class="n">inits</span> <span class="o">=</span> <span class="p">[</span><span class="mi">490</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span>
<span class="n">pars</span> <span class="o">=</span> <span class="p">[</span><span class="n">beta</span><span class="p">,</span><span class="n">alpha</span><span class="p">,</span><span class="n">sigma</span><span class="p">]</span>


<span class="c"># propensity functions</span>
<span class="k">def</span> <span class="nf">f1</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">inits</span><span class="p">):</span><span class="k">return</span> <span class="n">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">inits</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="n">inits</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="n">inits</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="c">#S-&gt;E</span>
<span class="k">def</span> <span class="nf">f2</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">inits</span><span class="p">):</span><span class="k">return</span> <span class="n">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="n">inits</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="c">#E-&gt;I</span>
<span class="k">def</span> <span class="nf">f3</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">inits</span><span class="p">):</span><span class="k">return</span> <span class="n">r</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="n">inits</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="c">#I-&gt;R</span>
<span class="k">def</span> <span class="nf">f4</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">inits</span><span class="p">):</span><span class="k">return</span> <span class="n">r</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="n">inits</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="c">#E-&gt;A</span>
<span class="k">def</span> <span class="nf">f5</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">inits</span><span class="p">):</span><span class="k">return</span> <span class="n">r</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="n">inits</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="c">#A-&gt;R</span>

<span class="k">def</span> <span class="nf">runModel</span><span class="p">(</span><span class="n">theta</span><span class="p">):</span>
    <span class="k">global</span> <span class="n">tf</span><span class="p">,</span><span class="n">inits</span>
    <span class="n">step</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="c">#setting parameters</span>
    <span class="n">beta</span><span class="p">,</span><span class="n">alpha</span><span class="p">,</span><span class="n">sigma</span> <span class="o">=</span> <span class="n">theta</span><span class="p">[:</span><span class="mi">3</span><span class="p">]</span>
    <span class="n">vnames</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;S&#39;</span><span class="p">,</span><span class="s">&#39;E&#39;</span><span class="p">,</span><span class="s">&#39;I&#39;</span><span class="p">,</span><span class="s">&#39;A&#39;</span><span class="p">,</span><span class="s">&#39;R&#39;</span><span class="p">]</span>
    <span class="c">#rates: b,ki,ka,ri,ra</span>
    <span class="c">#r = (0.001, 0.1, 0.1, 0.01, 0.01)</span>
    <span class="n">r</span> <span class="o">=</span> <span class="p">(</span><span class="n">beta</span><span class="p">,</span> <span class="p">(</span><span class="n">alpha</span><span class="p">)</span><span class="o">*</span><span class="n">epsilon</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">alpha</span><span class="p">)</span><span class="o">*</span><span class="n">epsilon</span><span class="p">,</span> <span class="n">tau</span><span class="p">,</span> <span class="n">tau</span><span class="p">)</span>
    <span class="c">#print r,inits</span>
    <span class="c"># propensity functions</span>
    <span class="n">propf</span> <span class="o">=</span> <span class="p">(</span><span class="n">f1</span><span class="p">,</span><span class="n">f2</span><span class="p">,</span><span class="n">f3</span><span class="p">,</span><span class="n">f4</span><span class="p">,</span><span class="n">f5</span><span class="p">)</span>

    <span class="n">tmat</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
                  <span class="p">[</span> <span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
                  <span class="p">[</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
                  <span class="p">[</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span>
                  <span class="p">[</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
                <span class="p">])</span>
    <span class="n">M</span><span class="o">=</span><span class="n">Model</span><span class="p">(</span><span class="n">vnames</span><span class="o">=</span><span class="n">vnames</span><span class="p">,</span><span class="n">rates</span> <span class="o">=</span> <span class="n">r</span><span class="p">,</span><span class="n">inits</span><span class="o">=</span><span class="n">inits</span><span class="p">,</span><span class="n">tmat</span><span class="o">=</span><span class="n">tmat</span><span class="p">,</span><span class="n">propensity</span><span class="o">=</span><span class="n">propf</span><span class="p">)</span>
    <span class="c">#t0 = time.time()</span>
    <span class="n">M</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">tmax</span><span class="o">=</span><span class="n">tf</span><span class="p">,</span><span class="n">reps</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">viz</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">serial</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">t</span><span class="p">,</span><span class="n">series</span><span class="p">,</span><span class="n">steps</span> <span class="o">=</span> <span class="n">M</span><span class="o">.</span><span class="n">getStats</span><span class="p">()</span>
    <span class="n">ser</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="c">#print series.shape</span>
    <span class="k">return</span> <span class="n">ser</span>

<span class="n">d</span> <span class="o">=</span> <span class="n">runModel</span><span class="p">([</span><span class="n">beta</span><span class="p">,</span><span class="n">alpha</span><span class="p">,</span><span class="n">sigma</span><span class="p">])</span>
<span class="n">dt</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;S&#39;</span><span class="p">:</span><span class="n">d</span><span class="p">[:,</span><span class="mi">0</span><span class="p">],</span><span class="s">&#39;E&#39;</span><span class="p">:</span><span class="n">d</span><span class="p">[:,</span><span class="mi">1</span><span class="p">],</span><span class="s">&#39;I&#39;</span><span class="p">:</span><span class="n">d</span><span class="p">[:,</span><span class="mi">2</span><span class="p">],</span><span class="s">&#39;A&#39;</span><span class="p">:</span><span class="n">d</span><span class="p">[:,</span><span class="mi">3</span><span class="p">],</span><span class="s">&#39;R&#39;</span><span class="p">:</span><span class="n">d</span><span class="p">[:,</span><span class="mi">4</span><span class="p">]}</span>
<span class="n">F</span> <span class="o">=</span> <span class="n">FitModel</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="n">runModel</span><span class="p">,</span><span class="n">inits</span><span class="p">,</span><span class="n">tf</span><span class="p">,[</span><span class="s">&#39;beta&#39;</span><span class="p">,</span><span class="s">&#39;alpha&#39;</span><span class="p">,</span><span class="s">&#39;sigma&#39;</span><span class="p">],[</span><span class="s">&#39;S&#39;</span><span class="p">,</span><span class="s">&#39;E&#39;</span><span class="p">,</span><span class="s">&#39;I&#39;</span><span class="p">,</span><span class="s">&#39;A&#39;</span><span class="p">,</span><span class="s">&#39;R&#39;</span><span class="p">],</span>
            <span class="n">wl</span><span class="o">=</span><span class="mi">7</span><span class="p">,</span><span class="n">nw</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span><span class="n">verbose</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span><span class="n">burnin</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">F</span><span class="o">.</span><span class="n">set_priors</span><span class="p">(</span><span class="n">tdists</span><span class="o">=</span><span class="p">[</span><span class="n">st</span><span class="o">.</span><span class="n">uniform</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">,</span><span class="n">tpars</span><span class="o">=</span><span class="p">[(</span><span class="mf">0.00001</span><span class="p">,</span><span class="o">.</span><span class="mo">0006</span><span class="p">),(</span><span class="o">.</span><span class="mo">01</span><span class="p">,</span><span class="o">.</span><span class="mi">5</span><span class="p">),(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)],</span><span class="n">tlims</span><span class="o">=</span><span class="p">[(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">),(</span><span class="o">.</span><span class="mo">001</span><span class="p">,</span><span class="mi">1</span><span class="p">),(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)],</span>
    <span class="n">pdists</span><span class="o">=</span><span class="p">[</span><span class="n">st</span><span class="o">.</span><span class="n">uniform</span><span class="p">]</span><span class="o">*</span><span class="mi">5</span><span class="p">,</span><span class="n">ppars</span><span class="o">=</span><span class="p">[(</span><span class="mi">0</span><span class="p">,</span><span class="mi">500</span><span class="p">)]</span><span class="o">*</span><span class="mi">5</span><span class="p">,</span><span class="n">plims</span><span class="o">=</span><span class="p">[(</span><span class="mi">0</span><span class="p">,</span><span class="mi">500</span><span class="p">)]</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="n">F</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">dt</span><span class="p">,</span><span class="s">&#39;MCMC&#39;</span><span class="p">,</span><span class="n">likvar</span><span class="o">=</span><span class="mf">2e2</span><span class="p">,</span><span class="n">pool</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span><span class="n">monitor</span><span class="o">=</span><span class="p">[])</span>
<span class="c">#print F.optimize(data=dt,p0=[0.1,.5,.1], optimizer=&#39;scipy&#39;,tol=1e-5, verbose=1, plot=1)</span>
<span class="c">#==Uncomment the line below to see plots of the results</span>
<span class="c">#F.plot_results()</span>
</pre></div>
</div>
<p>This example can be found in the examples folder of BIP under the name of <a href="_downloads/flu_stochastic.py"><strong class="xref">flu_stochastic.py</strong></a>.</p>
</div>
</div>
<div class="section" id="iterative-estimation-and-forecast">
<h2>Iterative Estimation and Forecast<a class="headerlink" href="#iterative-estimation-and-forecast" title="Permalink to this headline">¶</a></h2>
<p>In some other types of application, one&#8217;s data accrue gradually and it may be interesting to use newly available data to improve previously obtained parameter estimations.</p>
<p>Here we envision two types of scenarios: one assuming constant parameters and another where parameter values can actually vary with time. These two scenarios lead to the two fitting strategies depicted on figure</p>
<div class="figure">
<img alt="_images/Inference_scenarios2.png" src="_images/Inference_scenarios2.png" style="width: 15cm;" />
<p class="caption">Fitting scenarios: Moving windows and expanding windows.</p>
</div>
</div>
<div class="section" id="references">
<h2>References<a class="headerlink" href="#references" title="Permalink to this headline">¶</a></h2>
<table class="docutils footnote" frame="void" id="id2" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id1">[1]</a></td><td>Poole, D., &amp; Raftery, A. E. (2000). Inference for Deterministic Simulation Models: The Bayesian Melding Approach. Journal of the American Statistical Association, 95(452), 1244-1255. doi:10.2307/2669764</td></tr>
</tbody>
</table>
</div>
</div>


          </div>
        </div>
      </div>
      <div class="clearer"></div>
    </div>
    <div class="related">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="genindex.html" title="General Index"
             >index</a></li>
        <li class="right" >
          <a href="sde.html" title="Stochastic Differential Equations"
             >next</a> |</li>
        <li class="right" >
          <a href="overview.html" title="Overview"
             >previous</a> |</li>
        <li><a href="index.html">BIP</a> &raquo;</li> 
      </ul>
    </div>
    <div class="footer">
      &copy; Copyright 2010, Flávio Codeço Coelho.
      Created using <a href="http://sphinx.pocoo.org/">Sphinx</a> 0.6.5.
    </div>
  </body>
</html>