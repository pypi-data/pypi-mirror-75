
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'COMMA':([2,3,4,5,8,9,10,12,13,14,15,16,17,18,22,23,24,26,27,28,32,33,36,38,41,43,44,49,50,52,58,59,60,61,62,64,65,66,67,69,71,73,76,89,91,92,94,95,96,97,99,101,102,104,110,113,114,115,119,124,125,127,128,131,132,140,142,143,144,147,154,155,156,158,159,160,161,164,166,167,170,171,172,173,175,176,180,181,182,183,184,187,189,190,192,193,194,195,203,216,223,230,231,232,233,234,235,236,237,239,241,244,246,247,248,250,252,253,255,258,259,264,265,287,288,303,305,307,308,309,311,312,317,323,325,326,327,328,329,330,337,349,350,359,360,366,367,369,372,374,375,376,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,410,414,417,418,419,422,423,424,425,432,435,436,445,446,447,448,449,450,451,452,454,456,457,462,465,474,475,476,481,482,483,484,487,488,491,495,496,501,503,508,509,511,512,],[-117,-103,-107,-215,-101,-93,-98,-104,-29,-111,-100,-94,-99,-115,-102,-91,-105,-109,-114,-97,-52,-106,-108,-113,-116,-95,-96,-110,-303,-112,-89,105,-37,-54,-88,-90,-156,-87,-118,-120,-157,-147,-146,-131,-130,-53,-158,-160,-27,-28,145,-92,-124,-122,-55,-151,-154,192,-156,-164,-303,242,243,-288,-169,-128,-159,-161,-30,-119,-294,-230,-292,-253,-291,-296,-251,-295,-171,-299,-278,-280,-289,-279,-277,-232,-297,-290,-121,-265,-293,-216,-38,192,-152,-148,-302,192,334,-213,-288,-167,-184,-45,-56,-2,-168,-166,-1,-182,-35,-36,-129,-143,371,-141,-126,-127,-132,-123,-125,-43,-44,-273,-274,-257,-254,-300,-298,-251,-256,-255,415,-303,334,-150,-155,-229,-153,-149,334,-34,-31,-57,-183,-170,-165,-134,-145,-133,-42,-39,-235,334,-240,-237,-239,-244,-234,-243,-250,-248,-245,-249,-246,-238,-236,-233,-242,-241,-247,334,-272,-271,-269,-270,-268,-286,455,-217,460,-174,-172,-181,-182,-281,334,334,-214,334,-33,-32,-189,-187,-185,-191,-144,-142,-41,-40,-266,-267,-258,-173,-252,-188,-186,-190,-50,-51,-231,-287,-175,502,334,-49,-46,-282,-275,-48,-47,334,-276,]),'TYPEID':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,62,64,65,66,70,72,73,75,76,78,79,80,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,101,105,107,117,118,120,125,129,134,135,136,137,138,139,140,141,142,143,144,145,153,188,193,194,196,199,200,201,206,209,211,212,213,218,221,239,240,241,243,244,245,246,252,253,255,256,257,286,289,304,306,310,313,326,330,333,338,339,341,343,344,345,349,350,354,356,369,371,373,374,420,427,428,433,434,435,436,472,489,490,494,513,516,518,520,],[5,-117,-103,-107,-215,-60,-303,-101,-93,-98,-104,-29,-111,-100,-94,-99,-115,60,-136,-63,-102,-91,-105,73,-109,-114,-97,-67,5,-303,-52,-106,-68,-108,5,-113,-64,89,-116,-65,-95,-96,-135,-66,-303,-110,-303,-62,-112,5,-9,-10,-86,-89,-88,-90,5,-87,60,60,-147,-301,-146,60,5,-82,5,-84,5,-81,-69,-61,-131,5,-130,-53,-85,-158,-160,-27,-28,-92,60,5,5,-70,-83,232,5,5,5,60,5,-137,-140,-128,5,-159,-161,-30,60,-71,5,-148,-302,-77,-76,-192,-193,5,-75,-73,-194,-74,-72,-78,232,5,-35,5,-36,5,-129,-126,-127,-132,-138,5,399,402,5,5,5,5,-150,-149,-209,-211,-195,5,-212,-196,-208,-34,-31,5,5,-134,60,-139,-133,5,-210,-199,-207,-197,-33,-32,-198,-202,-203,-200,-204,-201,-206,-205,]),'_COMPLEX':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,41,42,43,44,46,48,49,51,52,54,55,56,57,58,62,64,65,66,73,75,76,78,79,80,82,83,85,86,87,88,89,90,91,92,93,95,101,107,117,118,120,125,129,134,135,136,137,138,139,140,141,143,144,153,188,193,194,196,199,200,201,206,209,211,212,213,218,221,240,241,243,244,245,246,252,253,255,256,257,304,306,310,313,323,326,330,333,338,339,341,343,344,345,349,350,354,356,369,373,374,420,427,428,433,434,435,436,472,489,490,494,513,516,518,520,],[4,-117,-103,-107,-215,-60,-303,-101,-93,-98,-104,-29,-111,-100,-94,-99,-115,4,-63,-102,-91,-105,-109,-114,-97,-67,4,-303,-52,-106,-68,-108,4,-113,-64,-116,-65,-95,-96,-66,-303,-110,-62,-112,4,-9,-10,-86,-89,-88,-90,4,-87,-147,-301,-146,4,4,-82,4,-84,4,-81,-69,-61,-131,4,-130,-53,-85,-160,-92,4,4,-70,-83,4,4,4,4,4,4,-137,-140,-128,4,-161,-30,-71,4,-148,-302,-77,-76,-192,-193,4,-75,-73,-194,-74,-72,-78,4,-35,4,-36,4,-129,-126,-127,-132,-138,4,4,4,4,4,4,-150,-149,-209,-211,-195,4,-212,-196,-208,-34,-31,4,4,-134,-139,-133,4,-210,-199,-207,-197,-33,-32,-198,-202,-203,-200,-204,-201,-206,-205,]),'PLUSEQUAL':([131,154,156,158,159,160,161,164,167,170,171,172,173,175,180,181,183,184,194,223,287,288,303,305,307,308,309,311,312,399,400,401,402,403,422,454,456,457,465,501,503,512,],[-288,-294,-292,-253,-291,-296,297,-295,-299,-278,-280,-289,-279,-277,-297,-290,-265,-293,-302,-288,-273,-274,-257,-254,-300,-298,-251,-256,-255,-272,-271,-269,-270,-268,-281,-266,-267,-258,-252,-282,-275,-276,]),'HEX_FLOAT_CONST':([2,18,35,41,75,84,86,87,95,96,97,106,109,117,121,122,123,143,146,148,149,150,157,162,163,165,168,169,174,177,178,185,186,188,191,194,196,199,200,201,204,205,206,209,210,211,212,213,218,221,226,228,229,238,249,260,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,292,293,294,295,296,297,298,299,300,301,302,304,306,310,314,316,320,321,331,332,333,334,338,339,340,341,343,344,345,346,348,353,355,357,370,412,415,421,427,428,429,431,433,434,437,440,441,442,453,455,459,463,464,466,467,468,469,471,472,473,477,479,480,489,490,492,494,500,502,506,507,513,514,516,518,519,520,],[-117,-115,-68,-116,-301,-303,-81,-69,-160,-27,-28,-303,154,154,154,-28,-303,-161,154,154,-28,-303,-263,154,-264,-259,154,-261,154,-262,154,-303,-260,154,154,-302,-77,-76,-192,-193,154,154,154,-75,154,-73,-194,-74,-72,-78,-260,154,154,154,154,-260,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-227,-224,-221,-225,-222,-223,-220,-219,-226,-228,-218,154,154,154,154,154,-12,-11,154,154,-209,154,-211,-195,154,154,-212,-196,-208,154,154,154,-303,-260,154,-176,-303,154,-210,-199,154,154,-207,-197,-260,154,-28,-303,154,154,154,154,-11,-303,154,154,154,154,-198,154,-260,154,154,-202,-203,154,-200,154,-303,154,154,-204,154,-201,-206,154,-205,]),'PLUSPLUS':([2,18,35,41,75,84,86,87,95,96,97,106,109,117,121,122,123,131,143,146,148,149,150,154,156,157,158,159,160,162,163,164,165,167,168,169,170,171,172,173,174,175,177,178,180,181,183,184,185,186,188,191,194,196,199,200,201,204,205,206,209,210,211,212,213,218,221,223,226,228,229,238,249,260,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,304,306,307,308,310,314,316,320,321,331,332,333,334,338,339,340,341,343,344,345,346,348,353,355,357,370,399,400,401,402,403,412,415,421,422,427,428,429,431,433,434,437,440,441,442,453,454,455,456,459,463,464,466,467,468,469,471,472,473,477,479,480,489,490,492,494,500,501,502,503,506,507,512,513,514,516,518,519,520,],[-117,-115,-68,-116,-301,-303,-81,-69,-160,-27,-28,-303,168,168,168,-28,-303,-288,-161,168,168,-28,-303,-294,-292,-263,287,-291,-296,168,-264,-295,-259,-299,168,-261,-278,-280,-289,-279,168,-277,-262,168,-297,-290,-265,-293,-303,-260,168,168,-302,-77,-76,-192,-193,168,168,168,-75,168,-73,-194,-74,-72,-78,-288,-260,168,168,168,168,-260,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-273,-274,168,168,-227,-224,-221,-225,-222,-223,-220,-219,-226,-228,-218,168,168,-300,-298,168,168,168,-12,-11,168,168,-209,168,-211,-195,168,168,-212,-196,-208,168,168,168,-303,-260,168,-272,-271,-269,-270,-268,-176,-303,168,-281,-210,-199,168,168,-207,-197,-260,168,-28,-303,168,-266,168,-267,168,168,-11,-303,168,168,168,168,-198,168,-260,168,168,-202,-203,168,-200,168,-282,-303,-275,168,168,-276,-204,168,-201,-206,168,-205,]),'LT':([131,154,155,156,158,159,160,161,164,167,170,171,172,173,175,176,180,181,183,184,194,223,287,288,303,305,307,308,309,311,312,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399,400,401,402,403,422,454,456,457,465,501,503,512,],[-288,-294,268,-292,-253,-291,-296,-251,-295,-299,-278,-280,-289,-279,-277,-232,-297,-290,-265,-293,-302,-288,-273,-274,-257,-254,-300,-298,-251,-256,-255,-235,-240,-237,-239,268,-234,-243,268,268,268,268,268,-238,-236,-233,-242,-241,268,-272,-271,-269,-270,-268,-281,-266,-267,-258,-252,-282,-275,-276,]),'AUTO':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,41,42,43,44,46,48,49,51,52,58,62,64,65,66,73,75,76,78,79,80,85,86,87,88,89,91,92,101,107,117,118,120,125,144,153,193,194,196,199,200,201,206,209,211,212,213,218,221,240,241,243,244,255,326,330,333,338,339,341,343,344,345,349,350,354,356,369,374,420,427,428,433,434,435,436,472,489,490,494,513,516,518,520,],[9,-117,-103,-107,-215,-60,9,-101,-93,-98,-104,-29,-111,-100,-94,-99,-115,9,-63,-102,-91,-105,-109,-114,-97,-67,9,9,-52,-106,-68,-108,9,-113,-64,-116,-65,-95,-96,-66,9,-110,-62,-112,-89,-88,-90,9,-87,-147,-301,-146,9,9,-82,9,-81,-69,-61,-131,-130,-53,-92,9,9,-70,-83,9,-30,-71,-148,-302,-77,-76,-192,-193,9,-75,-73,-194,-74,-72,-78,9,-35,9,-36,-132,-150,-149,-209,-211,-195,9,-212,-196,-208,-34,-31,9,9,-134,-133,9,-210,-199,-207,-197,-33,-32,-198,-202,-203,-200,-204,-201,-206,-205,]),'RSHIFTEQUAL':([131,154,156,158,159,160,161,164,167,170,171,172,173,175,180,181,183,184,194,223,287,288,303,305,307,308,309,311,312,399,400,401,402,403,422,454,456,457,465,501,503,512,],[-288,-294,-292,-253,-291,-296,300,-295,-299,-278,-280,-289,-279,-277,-297,-290,-265,-293,-302,-288,-273,-274,-257,-254,-300,-298,-251,-256,-255,-272,-271,-269,-270,-268,-281,-266,-267,-258,-252,-282,-275,-276,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,41,42,43,44,46,48,49,51,52,54,55,56,57,58,62,64,65,66,73,75,76,78,79,80,82,83,85,86,87,88,89,90,91,92,93,95,101,107,117,118,120,125,129,134,135,136,137,138,139,140,141,143,144,153,188,193,194,196,199,200,201,206,209,211,212,213,218,221,240,241,243,244,245,246,252,253,255,256,257,304,306,310,313,323,326,330,333,338,339,341,343,344,345,349,350,354,356,369,373,374,420,427,428,433,434,435,436,472,489,490,494,513,516,518,520,],[8,-117,-103,-107,-215,-60,-303,-101,-93,-98,-104,-29,-111,-100,-94,-99,-115,8,-63,-102,-91,-105,-109,-114,-97,-67,8,-303,-52,-106,-68,-108,8,-113,-64,-116,-65,-95,-96,-66,-303,-110,-62,-112,8,-9,-10,-86,-89,-88,-90,8,-87,-147,-301,-146,8,8,-82,8,-84,8,-81,-69,-61,-131,8,-130,-53,-85,-160,-92,8,8,-70,-83,8,8,8,8,8,8,-137,-140,-128,8,-161,-30,-71,8,-148,-302,-77,-76,-192,-193,8,-75,-73,-194,-74,-72,-78,8,-35,8,-36,8,-129,-126,-127,-132,-138,8,8,8,8,8,8,-150,-149,-209,-211,-195,8,-212,-196,-208,-34,-31,8,8,-134,-139,-133,8,-210,-199,-207,-197,-33,-32,-198,-202,-203,-200,-204,-201,-206,-205,]),'INLINE':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,41,42,43,44,46,48,49,51,52,58,62,64,65,66,73,75,76,78,79,80,85,86,87,88,89,91,92,101,107,117,118,120,125,144,153,193,194,196,199,200,201,206,209,211,212,213,218,221,240,241,243,244,255,326,330,333,338,339,341,343,344,345,349,350,354,356,369,374,420,427,428,433,434,435,436,472,489,490,494,513,516,518,520,],[10,-117,-103,-107,-215,-60,10,-101,-93,-98,-104,-29,-111,-100,-94,-99,-115,10,-63,-102,-91,-105,-109,-114,-97,-67,10,10,-52,-106,-68,-108,10,-113,-64,-116,-65,-95,-96,-66,10,-110,-62,-112,-89,-88,-90,10,-87,-147,-301,-146,10,10,-82,10,-81,-69,-61,-131,-130,-53,-92,10,10,-70,-83,10,-30,-71,-148,-302,-77,-76,-192,-193,10,-75,-73,-194,-74,-72,-78,10,-35,10,-36,-132,-150,-149,-209,-211,-195,10,-212,-196,-208,-34,-31,10,10,-134,-133,10,-210,-199,-207,-197,-33,-32,-198,-202,-203,-200,-204,-201,-206,-205,]),'ID':([0,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,64,66,70,72,73,74,75,76,78,82,83,84,85,86,87,88,89,91,93,94,95,96,97,101,105,106,107,109,112,116,117,118,121,122,123,125,136,140,142,143,145,146,148,149,150,153,157,162,163,165,168,169,174,177,178,185,186,188,191,192,193,194,196,199,200,201,204,205,206,209,210,211,212,213,218,221,222,226,228,229,238,239,240,242,246,249,252,253,255,260,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,306,310,314,316,318,320,321,326,330,331,332,333,334,338,339,340,341,343,344,345,346,348,353,355,356,357,365,369,370,371,374,412,415,421,427,428,429,431,433,434,437,440,441,442,453,455,459,460,463,464,466,467,468,469,471,472,473,477,479,480,489,490,492,494,499,500,502,506,507,513,514,516,518,519,520,],[13,-117,-103,-107,-215,-60,-303,-101,-93,-98,-104,-111,-100,-94,-99,-115,13,-136,-63,-102,-91,-105,76,-109,-114,-97,-67,-303,-106,-68,-108,13,-113,-64,91,-116,-65,-95,-96,-135,-66,13,-303,-110,-303,-62,-112,13,13,-9,-10,-86,-89,-88,-90,-87,13,13,-147,114,-301,-146,13,13,-84,-303,131,-81,-69,-61,-131,-130,-85,-158,-160,-27,-28,-92,13,-303,131,131,114,114,223,-70,131,-28,-303,13,13,-128,-159,-161,13,131,131,-28,-303,-71,-263,131,-264,-259,131,-261,131,-262,131,-303,-260,131,131,114,-148,-302,-77,-76,-192,-193,223,131,223,-75,131,-73,-194,-74,-72,-78,347,-260,131,131,131,13,13,131,-129,131,-126,-127,-132,-260,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,400,401,131,131,-227,-224,-221,-225,-222,-223,-220,-219,-226,-228,-218,131,131,131,131,131,131,-12,-11,-150,-149,131,131,-209,131,-211,-195,223,131,-212,-196,-208,131,223,131,-303,131,-260,13,-134,131,13,-133,-176,-303,131,-210,-199,131,223,-207,-197,-260,131,-28,-303,131,131,131,131,131,-11,-303,223,223,131,131,-198,223,-260,131,131,-202,-203,131,-200,131,131,-303,131,223,-204,223,-201,-206,223,-205,]),'SWITCH':([35,75,86,87,117,194,196,199,200,201,204,206,209,211,212,213,218,221,333,338,339,340,343,344,345,348,427,428,431,433,434,467,468,472,473,489,490,494,507,513,514,516,518,519,520,],[-68,-301,-81,-69,197,-302,-77,-76,-192,-193,197,197,-75,-73,-194,-74,-72,-78,-209,-211,-195,197,-212,-196,-208,197,-210,-199,197,-207,-197,197,197,-198,197,-202,-203,-200,197,-204,197,-201,-206,197,-205,]),'ELLIPSIS':([243,],[368,]),'NE':([131,154,155,156,158,159,160,161,164,167,170,171,172,173,175,176,180,181,183,184,194,223,287,288,303,305,307,308,309,311,312,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399,400,401,402,403,422,454,456,457,465,501,503,512,],[-288,-294,276,-292,-253,-291,-296,-251,-295,-299,-278,-280,-289,-279,-277,-232,-297,-290,-265,-293,-302,-288,-273,-274,-257,-254,-300,-298,-251,-256,-255,-235,-240,-237,-239,-244,-234,-243,276,276,-245,276,276,-238,-236,-233,-242,-241,276,-272,-271,-269,-270,-268,-281,-266,-267,-258,-252,-282,-275,-276,]),'EQUALS':([13,32,60,61,65,69,71,92,102,110,114,119,131,144,154,156,158,159,160,161,164,167,170,171,172,173,175,180,181,183,184,189,194,223,241,244,264,265,287,288,303,305,307,308,309,311,312,315,322,349,350,375,376,399,400,401,402,403,413,416,422,435,436,451,452,454,456,457,461,465,501,503,512,],[-29,-52,-37,-54,-156,109,-157,-53,146,-55,191,-156,-288,-30,-294,-292,-253,-291,-296,302,-295,-299,-278,-280,-289,-279,-277,-297,-290,-265,-293,-38,-302,-288,-35,-36,-43,-44,-273,-274,-257,-254,-300,-298,-251,-256,-255,412,-177,-34,-31,-42,-39,-272,-271,-269,-270,-268,-178,-180,-281,-33,-32,-41,-40,-266,-267,-258,-179,-252,-282,-275,-276,]),'OREQUAL':([131,154,156,158,159,160,161,164,167,170,171,172,173,175,180,181,183,184,194,223,287,288,303,305,307,308,309,311,312,399,400,401,402,403,422,454,456,457,465,501,503,512,],[-288,-294,-292,-253,-291,-296,301,-295,-299,-278,-280,-289,-279,-277,-297,-290,-265,-293,-302,-288,-273,-274,-257,-254,-300,-298,-251,-256,-255,-272,-271,-269,-270,-268,-281,-266,-267,-258,-252,-282,-275,-276,]),'AND':([2,18,35,41,75,84,86,87,95,96,97,106,109,117,121,122,123,131,143,146,148,149,150,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,188,191,194,196,199,200,201,204,205,206,209,210,211,212,213,218,221,223,226,228,229,238,249,260,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,316,320,321,331,332,333,334,338,339,340,341,343,344,345,346,348,353,355,357,370,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399,400,401,402,403,412,415,421,422,427,428,429,431,433,434,437,440,441,442,453,454,455,456,457,459,463,464,465,466,467,468,469,471,472,473,477,479,480,489,490,492,494,500,501,502,503,506,507,512,513,514,516,518,519,520,],[-117,-115,-68,-116,-301,-303,-81,-69,-160,-27,-28,-303,165,165,165,-28,-303,-288,-161,165,165,-28,-303,-294,278,-292,-263,-253,-291,-296,-251,165,-264,-295,-259,-299,165,-261,-278,-280,-289,-279,165,-277,-232,-262,165,-297,-290,-265,-293,-303,-260,165,165,-302,-77,-76,-192,-193,165,165,165,-75,165,-73,-194,-74,-72,-78,-288,-260,165,165,165,165,-260,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-273,-274,165,165,-227,-224,-221,-225,-222,-223,-220,-219,-226,-228,-218,-257,165,-254,165,-300,-298,-251,165,-256,-255,165,165,-12,-11,165,165,-209,165,-211,-195,165,165,-212,-196,-208,165,165,165,-303,-260,165,-235,-240,-237,-239,-244,-234,-243,278,278,-245,278,-246,-238,-236,-233,-242,-241,278,-272,-271,-269,-270,-268,-176,-303,165,-281,-210,-199,165,165,-207,-197,-260,165,-28,-303,165,-266,165,-267,-258,165,165,-11,-252,-303,165,165,165,165,-198,165,-260,165,165,-202,-203,165,-200,165,-282,-303,-275,165,165,-276,-204,165,-201,-206,165,-205,]),'COLON':([2,3,4,5,8,12,13,14,15,17,18,22,24,26,27,32,33,36,38,41,49,52,60,61,71,73,76,89,91,92,110,119,131,136,140,144,154,155,156,158,159,160,161,164,167,170,171,172,173,175,176,180,181,183,184,187,189,193,194,207,216,223,241,244,246,247,252,253,255,264,265,287,288,303,305,307,308,309,311,312,326,328,330,342,349,350,369,371,374,375,376,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399,400,401,402,403,406,422,425,435,436,451,452,454,456,457,465,483,501,503,512,],[-117,-103,-107,-215,-101,-104,-29,-111,-100,-99,-115,-102,-105,-109,-114,-52,-106,-108,-113,-116,-110,-112,-37,-54,-157,-147,-146,-131,-130,-53,-55,-156,-288,249,-128,-30,-294,-230,-292,-253,-291,-296,-251,-295,-299,-278,-280,-289,-279,-277,-232,-297,-290,-265,-293,-216,-38,-148,-302,340,-213,348,-35,-36,-129,370,-126,-127,-132,-43,-44,-273,-274,-257,-254,-300,-298,-251,-256,-255,-150,-229,-149,431,-34,-31,-134,249,-133,-42,-39,-235,453,-240,-237,-239,-244,-234,-243,-250,-248,-245,-249,-246,-238,-236,-233,-242,-241,-247,-272,-271,-269,-270,-268,-217,-281,-214,-33,-32,-41,-40,-266,-267,-258,-252,-231,-282,-275,-276,]),'WCHAR_CONST':([2,18,35,41,75,84,86,87,95,96,97,106,109,117,121,122,123,143,146,148,149,150,157,162,163,165,168,169,174,177,178,185,186,188,191,194,196,199,200,201,204,205,206,209,210,211,212,213,218,221,226,228,229,238,249,260,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,292,293,294,295,296,297,298,299,300,301,302,304,306,310,314,316,320,321,331,332,333,334,338,339,340,341,343,344,345,346,348,353,355,357,370,412,415,421,427,428,429,431,433,434,437,440,441,442,453,455,459,463,464,466,467,468,469,471,472,473,477,479,480,489,490,492,494,500,502,506,507,513,514,516,518,519,520,],[-117,-115,-68,-116,-301,-303,-81,-69,-160,-27,-28,-303,160,160,160,-28,-303,-161,160,160,-28,-303,-263,160,-264,-259,160,-261,160,-262,160,-303,-260,160,160,-302,-77,-76,-192,-193,160,160,160,-75,160,-73,-194,-74,-72,-78,-260,160,160,160,160,-260,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-227,-224,-221,-225,-222,-223,-220,-219,-226,-228,-218,160,160,160,160,160,-12,-11,160,160,-209,160,-211,-195,160,160,-212,-196,-208,160,160,160,-303,-260,160,-176,-303,160,-210,-199,160,160,-207,-197,-260,160,-28,-303,160,160,160,160,-11,-303,160,160,160,160,-198,160,-260,160,160,-202,-203,160,-200,160,-303,160,160,-204,160,-201,-206,160,-205,]),'INT_CONST_OCT':([2,18,35,41,75,84,86,87,95,96,97,106,109,117,121,122,123,143,146,148,149,150,157,162,163,165,168,169,174,177,178,185,186,188,191,194,196,199,200,201,204,205,206,209,210,211,212,213,218,221,226,228,229,238,249,260,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,292,293,294,295,296,297,298,299,300,301,302,304,306,310,314,316,320,321,331,332,333,334,338,339,340,341,343,344,345,346,348,353,355,357,370,412,415,421,427,428,429,431,433,434,437,440,441,442,453,455,459,463,464,466,467,468,469,471,472,473,477,479,480,489,490,492,494,500,502,506,507,513,514,516,518,519,520,],[-117,-115,-68,-116,-301,-303,-81,-69,-160,-27,-28,-303,181,181,181,-28,-303,-161,181,181,-28,-303,-263,181,-264,-259,181,-261,181,-262,181,-303,-260,181,181,-302,-77,-76,-192,-193,181,181,181,-75,181,-73,-194,-74,-72,-78,-260,181,181,181,181,-260,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,-227,-224,-221,-225,-222,-223,-220,-219,-226,-228,-218,181,181,181,181,181,-12,-11,181,181,-209,181,-211,-195,181,181,-212,-196,-208,181,181,181,-303,-260,181,-176,-303,181,-210,-199,181,181,-207,-197,-260,181,-28,-303,181,181,181,181,-11,-303,181,181,181,181,-198,181,-260,181,181,-202,-203,181,-200,181,-303,181,181,-204,181,-201,-206,181,-205,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,41,42,43,44,46,48,49,51,52,54,55,56,57,58,62,64,65,66,73,75,76,78,79,80,82,83,85,86,87,88,89,90,91,92,93,95,101,107,117,118,120,125,129,134,135,136,137,138,139,140,141,143,144,153,188,193,194,196,199,200,201,206,209,211,212,213,218,221,240,241,243,244,245,246,252,253,255,256,257,304,306,310,313,323,326,330,333,338,339,341,343,344,345,349,350,354,356,369,373,374,420,427,428,433,434,435,436,472,489,490,494,513,516,518,520,],[24,-117,-103,-107,-215,-60,-303,-101,-93,-98,-104,-29,-111,-100,-94,-99,-115,24,-63,-102,-91,-105,-109,-114,-97,-67,24,-303,-52,-106,-68,-108,24,-113,-64,-116,-65,-95,-96,-66,-303,-110,-62,-112,24,-9,-10,-86,-89,-88,-90,24,-87,-147,-301,-146,24,24,-82,24,-84,24,-81,-69,-61,-131,24,-130,-53,-85,-160,-92,24,24,-70,-83,24,24,24,24,24,24,-137,-140,-128,24,-161,-30,-71,24,-148,-302,-77,-76,-192,-193,24,-75,-73,-194,-74,-72,-78,24,-35,24,-36,24,-129,-126,-127,-132,-138,24,24,24,24,24,24,-150,-149,-209,-211,-195,24,-212,-196,-208,-34,-31,24,24,-134,-139,-133,24,-210,-199,-207,-197,-33,-32,-198,-202,-203,-200,-204,-201,-206,-205,]),'PPHASH':([0,6,21,29,35,37,39,42,46,51,86,87,88,118,153,194,344,],[29,-60,-63,-67,-68,29,-64,-65,-66,-62,-81,-69,-61,-70,-71,-302,-196,]),'CONDOP':([131,154,155,156,158,159,160,161,164,167,170,171,172,173,175,176,180,181,183,184,194,223,287,288,303,305,307,308,309,311,312,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399,400,401,402,403,422,454,456,457,465,501,503,512,],[-288,-294,267,-292,-253,-291,-296,-251,-295,-299,-278,-280,-289,-279,-277,-232,-297,-290,-265,-293,-302,-288,-273,-274,-257,-254,-300,-298,-251,-256,-255,-235,-240,-237,-239,-244,-234,-243,-250,-248,-245,-249,-246,-238,-236,-233,-242,-241,-247,-272,-271,-269,-270,-268,-281,-266,-267,-258,-252,-282,-275,-276,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list_opt':([30,65,],[77,108,]),'brace_close':([115,137,190,195,215,245,257,319,415,488,502,],[193,255,326,330,344,369,374,417,462,503,512,]),'assignment_expression':([109,117,121,146,148,188,204,205,206,228,229,238,262,263,267,285,290,291,304,306,310,316,331,332,334,340,341,346,348,353,429,431,440,455,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[166,216,224,166,224,216,216,216,216,351,352,224,377,378,216,216,404,406,216,216,216,166,216,216,425,216,216,216,216,224,216,216,224,484,166,216,216,216,216,216,497,498,216,216,216,216,216,216,]),'initializer_list_opt':([185,],[319,]),'function_specifier':([0,7,19,30,31,37,48,65,78,79,85,107,117,125,206,240,243,341,354,356,420,],[7,7,58,7,7,7,7,7,58,7,7,7,7,58,7,7,7,7,7,7,7,]),'struct_declaration':([90,134,137,141,245,257,],[138,138,256,138,256,256,]),'declarator':([19,78,105,136,145,371,],[69,69,69,247,69,247,]),'jump_statement':([117,204,206,340,348,431,467,468,473,507,514,519,],[196,196,196,196,196,196,196,196,196,196,196,196,]),'specifier_qualifier_list':([90,134,137,141,188,245,257,304,306,310,313,],[136,136,136,136,323,136,136,323,323,323,323,]),'constant_expression':([191,210,249,314,370,],[327,342,372,411,449,]),'type_specifier':([0,30,37,54,65,79,82,85,90,107,117,129,134,135,137,141,188,206,240,243,245,257,304,306,310,313,341,354,356,420,],[23,23,23,101,23,23,101,23,140,23,23,101,140,246,140,140,140,23,23,23,140,140,140,140,140,140,23,23,23,23,]),'assignment_operator':([161,],[291,]),'type_name':([188,304,306,310,313,],[324,407,408,409,410,]),'direct_typeid_noparen_declarator':([125,239,],[233,359,]),'declaration_specifiers':([0,30,37,65,79,85,107,117,206,240,243,341,354,356,420,],[19,78,19,78,78,125,125,78,78,125,125,78,125,125,125,]),'abstract_declarator':([125,240,323,420,],[234,361,234,361,]),'abstract_declarator_opt':([125,323,],[235,418,]),'struct_or_union':([0,30,37,54,65,79,82,85,90,107,117,129,134,135,137,141,188,206,240,243,245,257,304,306,310,313,341,354,356,420,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'iteration_statement':([117,204,206,340,348,431,467,468,473,507,514,519,],[199,199,199,199,199,199,199,199,199,199,199,199,]),'declaration':([0,30,37,65,79,117,206,341,],[21,80,21,80,120,200,200,429,]),'initializer':([109,146,316,463,],[182,259,414,487,]),'struct_declarator':([136,371,],[250,450,]),'statement':([117,204,206,340,348,431,467,468,473,507,514,519,],[201,335,201,428,434,472,489,490,494,516,518,520,]),'type_specifier_no_typeid':([0,19,30,37,54,65,78,79,82,85,90,107,117,125,129,134,135,136,137,141,188,206,240,243,245,257,304,306,310,313,323,341,354,356,420,],[27,64,27,27,27,27,64,27,27,27,27,27,27,64,27,27,27,252,27,27,27,27,27,27,27,27,27,27,27,27,252,27,27,27,27,]),'unary_operator':([109,117,121,146,148,162,168,174,178,188,191,204,205,206,210,228,229,238,249,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,304,306,310,314,316,331,332,334,340,341,346,348,353,370,421,429,431,440,453,455,459,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'direct_typeid_declarator':([19,70,72,78,105,136,145,371,],[61,110,61,61,61,61,61,61,]),'parameter_type_list':([85,107,240,354,356,420,],[126,151,362,362,443,362,]),'expression':([117,188,204,205,206,267,285,304,306,310,331,332,340,341,346,348,429,431,467,468,469,471,473,492,500,506,507,514,519,],[203,325,203,337,203,380,398,325,325,325,423,424,203,203,432,203,203,203,203,203,491,203,203,203,511,203,203,203,203,]),'argument_expression_list':([290,],[405,]),'cast_expression':([109,117,121,146,148,174,188,191,204,205,206,210,228,229,238,249,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,304,306,310,314,316,331,332,334,340,341,346,348,353,370,421,429,431,440,453,455,459,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[176,176,176,176,176,311,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,465,176,176,176,176,176,465,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'type_qualifier_list':([50,84,90,106,123,134,137,141,150,188,245,257,304,306,310,313,355,442,],[97,122,135,149,97,135,135,135,97,135,135,135,135,135,135,135,441,97,]),'identifier_list':([85,107,356,],[127,127,127,]),'pp_directive':([0,37,],[39,39,]),'unified_wstring_literal':([109,117,121,146,148,162,168,174,178,188,191,204,205,206,210,228,229,238,249,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,304,306,310,314,316,331,332,334,340,341,346,348,353,370,421,429,431,440,453,455,459,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'enumerator_list':([74,112,116,],[115,190,195,]),'block_item_list':([117,],[206,]),'type_qualifier_list_opt':([50,84,106,123,150,355,442,],[94,121,148,229,263,440,480,]),'declaration_specifiers_no_type_opt':([7,31,48,],[57,83,93,]),'struct_declaration_list':([90,134,141,],[137,245,257,]),'typeid_noparen_declarator':([125,],[230,]),'designation_opt':([185,415,466,502,],[316,463,316,463,]),'storage_class_specifier':([0,7,19,30,31,37,48,65,78,79,85,107,117,125,206,240,243,341,354,356,420,],[48,48,62,48,48,48,48,48,62,48,48,48,48,62,48,48,48,48,48,48,48,]),'brace_open':([25,40,73,76,77,89,91,108,109,117,146,204,206,316,340,348,421,431,457,458,459,463,467,468,473,507,514,519,],[74,90,112,116,117,134,141,117,185,117,185,117,117,185,117,117,466,117,466,466,466,185,117,117,117,117,117,117,]),'identifier':([85,107,109,117,121,146,148,162,168,174,178,188,191,204,205,206,210,228,229,238,242,249,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,304,306,310,314,316,318,331,332,334,340,341,346,348,353,356,370,421,429,431,440,453,455,459,460,463,467,468,469,471,473,479,480,492,499,500,506,507,514,519,],[132,132,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,366,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,416,175,175,175,175,175,175,175,175,132,175,175,175,175,175,175,175,175,486,175,175,175,175,175,175,175,175,175,510,175,175,175,175,175,]),'selection_statement':([117,204,206,340,348,431,467,468,473,507,514,519,],[209,209,209,209,209,209,209,209,209,209,209,209,]),'typeid_declarator':([19,72,78,105,136,145,371,],[71,111,71,71,71,71,71,]),'enum_specifier':([0,30,37,54,65,79,82,85,90,107,117,129,134,135,137,141,188,206,240,243,245,257,304,306,310,313,341,354,356,420,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'conditional_expression':([109,117,121,146,148,188,191,204,205,206,210,228,229,238,249,262,263,267,285,290,291,304,306,310,314,316,331,332,334,340,341,346,348,353,370,429,431,440,453,455,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[187,187,187,187,187,187,328,187,187,187,328,187,187,187,328,187,187,187,187,187,187,187,187,187,328,187,187,187,187,187,187,187,187,187,328,187,187,187,483,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,]),'declaration_specifiers_no_type':([0,7,30,31,37,48,65,79,85,107,117,206,240,243,341,354,356,420,],[54,56,82,56,54,56,82,82,129,129,82,82,129,129,82,129,129,129,]),'translation_unit_or_empty':([0,],[1,]),'expression_statement':([117,204,206,340,348,431,467,468,473,507,514,519,],[211,211,211,211,211,211,211,211,211,211,211,211,]),'block_item':([117,206,],[212,339,]),'binary_expression':([109,117,121,146,148,188,191,204,205,206,210,228,229,238,249,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,304,306,310,314,316,331,332,334,340,341,346,348,353,370,429,431,440,453,455,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,379,155,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'external_declaration':([0,37,],[6,88,]),'compound_statement':([77,108,117,204,206,340,348,431,467,468,473,507,514,519,],[118,153,213,213,213,213,213,213,213,213,213,213,213,213,]),'postfix_expression':([109,117,121,146,148,162,168,174,178,188,191,204,205,206,210,228,229,238,249,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,304,306,310,314,316,331,332,334,340,341,346,348,353,370,421,429,431,440,453,455,459,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'parameter_declaration':([85,107,240,243,354,356,420,],[124,124,124,367,124,124,124,]),'direct_abstract_declarator':([125,239,240,323,365,419,420,],[231,360,231,231,360,360,231,]),'init_declarator':([19,78,105,145,],[67,67,147,258,]),'id_declarator':([0,19,37,53,54,72,78,82,105,125,136,145,240,371,],[30,65,30,98,102,98,119,102,119,236,119,119,98,119,]),'unary_expression':([109,117,121,146,148,162,168,174,178,188,191,204,205,206,210,228,229,238,249,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,304,306,310,314,316,331,332,334,340,341,346,348,353,370,421,429,431,440,453,455,459,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[161,161,161,161,161,303,305,309,312,161,309,161,161,161,309,161,161,161,309,161,161,309,161,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,161,161,161,161,161,161,309,161,161,161,161,161,161,161,161,161,309,309,161,161,161,309,161,309,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'struct_declarator_list':([136,],[248,]),'expression_opt':([117,204,206,340,341,348,429,431,467,468,471,473,492,506,507,514,519,],[214,214,214,214,430,214,470,214,214,214,493,214,505,515,214,214,214,]),'typedef_name':([0,30,37,54,65,79,82,85,90,107,117,129,134,135,137,141,188,206,240,243,245,257,304,306,310,313,341,354,356,420,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'block_item_list_opt':([117,],[215,]),'init_declarator_list':([19,78,],[59,59,]),'direct_id_declarator':([0,19,37,47,53,54,70,72,78,82,105,125,136,145,239,240,365,371,],[32,32,32,92,32,32,92,32,32,32,32,32,32,32,92,32,92,32,]),'declaration_list':([30,65,],[79,79,]),'constant':([109,117,121,146,148,162,168,174,178,188,191,204,205,206,210,228,229,238,249,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,304,306,310,314,316,331,332,334,340,341,346,348,353,370,421,429,431,440,453,455,459,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'initializer_list':([185,466,],[317,488,]),'parameter_list':([85,107,240,354,356,420,],[128,128,128,128,128,128,]),'struct_declarator_list_opt':([136,],[251,]),'labeled_statement':([117,204,206,340,348,431,467,468,473,507,514,519,],[218,218,218,218,218,218,218,218,218,218,218,218,]),'init_declarator_list_opt':([19,78,],[63,63,]),'unified_string_literal':([109,117,121,146,148,162,168,174,178,188,191,204,205,206,210,228,229,238,249,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,304,306,310,314,316,331,332,334,340,341,346,348,353,370,421,429,431,440,453,455,459,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'type_qualifier':([0,7,19,30,31,37,48,50,65,78,79,84,85,90,97,106,107,117,122,123,125,134,135,136,137,141,149,150,188,206,240,243,245,257,304,306,310,313,323,341,354,355,356,420,441,442,],[31,31,66,31,31,31,31,95,31,66,31,95,31,95,143,95,31,31,143,95,66,95,143,253,95,95,143,95,95,31,31,31,95,95,95,95,95,95,253,31,31,95,31,31,143,95,]),'decl_body':([0,30,37,65,79,117,206,341,],[34,34,34,34,34,34,34,34,]),'parameter_type_list_opt':([240,354,420,],[364,439,364,]),'designation':([185,415,466,502,],[320,320,320,320,]),'translation_unit':([0,],[37,]),'id_init_declarator_list_opt':([54,82,],[103,103,]),'struct_or_union_specifier':([0,30,37,54,65,79,82,85,90,107,117,129,134,135,137,141,188,206,240,243,245,257,304,306,310,313,341,354,356,420,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'empty':([0,7,19,30,31,48,50,54,65,78,82,84,85,106,107,117,121,123,125,136,148,150,185,204,206,238,240,323,340,341,348,353,354,355,356,415,420,429,431,440,442,466,467,468,471,473,492,502,506,507,514,519,],[11,55,68,81,55,55,96,100,81,68,100,96,130,96,130,220,225,96,237,254,225,96,321,336,336,225,363,237,336,336,336,225,363,96,130,464,363,336,336,225,96,464,336,336,336,336,336,464,336,336,336,336,]),'designator':([185,315,415,466,502,],[322,413,322,322,322,]),'pppragma_directive':([0,37,117,204,206,340,348,431,467,468,473,507,514,519,],[42,42,221,221,221,221,221,221,221,221,221,221,221,221,]),'enumerator':([74,112,116,192,],[113,113,113,329,]),'designator_list':([185,415,466,502,],[315,315,315,315,]),'pointer':([0,19,37,53,54,72,78,82,94,105,125,136,145,240,323,371,420,],[47,70,47,47,47,70,70,47,142,70,239,70,70,365,419,70,419,]),'primary_expression':([109,117,121,146,148,162,168,174,178,188,191,204,205,206,210,228,229,238,249,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,304,306,310,314,316,331,332,334,340,341,346,348,353,370,421,429,431,440,453,455,459,463,467,468,469,471,473,479,480,492,500,506,507,514,519,],[183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'offsetof_member_designator':([460,],[485,]),'id_init_declarator':([54,82,],[104,104,]),'assignment_expression_opt':([121,148,238,353,440,],[227,261,358,438,478,]),'function_definition':([0,37,],[51,51,]),'identifier_list_opt':([85,107,356,],[133,152,444,]),'id_init_declarator_list':([54,82,],[99,99,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',944),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',952),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',957),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',958),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',966),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',967),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',972),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',977),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',978),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',983),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',984),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',985),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',996),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',997),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1012),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1013),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1124),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1125),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1154),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1155),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1161),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1169),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1170),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1189),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1190),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1201),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1232),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1233),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1242),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1247),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1248),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1256),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1257),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1268),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1276),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1277),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1282),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1283),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1288),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1299),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1307),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1312),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1322),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1326),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1337),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1346),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1357),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1366),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1376),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1387),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1388),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1395),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1396),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1402),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1408),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1412),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1416),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1420),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1424),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1428),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1433),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1437),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1441),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1445),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1450),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1454),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1458),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1462),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1463),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1468),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1475),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1476),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1488),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1492),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1493),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1506),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1507),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1508),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1509),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1510),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1521),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1525),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1526),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1534),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1535),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1536),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1537),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1538),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1560),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1564),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1568),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1572),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1573),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1574),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1579),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1580),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1588),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1589),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1590),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1591),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1592),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1598),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1602),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1606),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1607),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1613),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1614),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1615),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1621),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1622),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1628),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1633),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1637),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1641),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1642),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1647),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1651),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1659),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1660),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1661),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1674),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1675),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1684),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1688),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1689),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1690),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1691),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1697),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1698),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1704),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1705),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1716),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1717),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1727),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1728),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1738),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1744),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1750),
]
