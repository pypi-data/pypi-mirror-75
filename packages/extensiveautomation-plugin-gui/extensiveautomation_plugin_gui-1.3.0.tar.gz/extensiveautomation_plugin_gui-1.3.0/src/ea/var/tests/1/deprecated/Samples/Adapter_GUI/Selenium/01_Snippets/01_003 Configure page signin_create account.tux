<?xml version="1.0" encoding="utf-8" ?>
<file>
<properties><descriptions><description><value>admin</value><key>author</key></description><description><value>25/02/2017 12:26:58</value><key>creation date</key></description><description><value>Just a basic sample.</value><key>summary</key></description><description><value>None.</value><key>prerequisites</key></description><description><value><comments /></value><key>comments</key></description><description><value>myplugins</value><key>libraries</key></description><description><value>myplugins</value><key>adapters</key></description><description><value>Writing</value><key>state</key></description><description><value>TESTCASE</value><key>name</key></description><description><value>REQ_01</value><key>requirement</key></description></descriptions><inputs-parameters><parameter><type>json</type><name>AGENT_GUI_BROWSER</name><description /><value>{"name": "", "type": "selenium3server"}</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_1</name><description /><value>first_name</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_2</name><description /><value>last_name</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_3</name><description /><value>username</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_4</name><description /><value>password</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_5</name><description /><value>password</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_1</name><description /><value>//input[@name="firstName"]</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_2</name><description /><value>//input[@name="lastName"]</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_3</name><description /><value>//input[@name="Username"]</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_4</name><description /><value>//input[@name="Passwd"]</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_5</name><description /><value>//input[@name="ConfirmPasswd"]</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_6</name><description /><value>//span[contains(text(), "Next")]</value><color /><scope>local</scope></parameter><parameter><type>bool</type><name>DEBUG</name><description /><value>False</value><color /><scope>local</scope></parameter><parameter><type>float</type><name>TIMEOUT_GUI_BROWSER</name><description /><value>40.0</value><color /><scope>local</scope></parameter></inputs-parameters><agents><agent><name>AGENT_GUI_BROWSER</name><description /><value /><type>seleniumserver</type></agent></agents><probes><probe><active>False</active><args /><name>probe01</name><type>default</type></probe></probes><outputs-parameters><parameter><color /><description /><type>float</type><name>TIMEOUT</name><value>1.0</value><scope>local</scope></parameter></outputs-parameters></properties>
<testdefinition><![CDATA[
def description(self):
	# testcase description
	self.setPurpose(purpose="Testcase generated by test assistant")

	# steps description
	self.step1 = self.addStep(expected="Action(s) executed with success", description="", summary="", enabled=True)

def prepare(self):
	# adapters and libraries definitions
	self.ADP_GUI_BROWSER = SutAdapters.GUI.Selenium(parent=self, agent=input('AGENT_GUI_BROWSER'), debug=input('DEBUG'), navigId=Cache().get(name='selenium-navig-id'))

	

def definition(self):
	if self.step1.isEnabled():
		self.step1.start()
	
		##CAPTURE_BROWSER>
		BROWSER_RET1 = self.ADP_GUI_BROWSER.doTypeText(text=Cache().get(name=input('BROWSER_TEXT_1')), timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=None, xpath=input('BROWSER_TEXT_BY_1'), linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET1:
			self.abort("Unable to ")
	
		##CAPTURE_BROWSER>
		BROWSER_RET2 = self.ADP_GUI_BROWSER.doTypeText(text=Cache().get(name=input('BROWSER_TEXT_2')), timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=None, xpath=input('BROWSER_TEXT_BY_2'), linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET2:
			self.abort("Unable to ")
	
		##CAPTURE_BROWSER>
		BROWSER_RET3 = self.ADP_GUI_BROWSER.doTypeText(text=Cache().get(name=input('BROWSER_TEXT_3')), timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=None, xpath=input('BROWSER_TEXT_BY_3'), linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET3:
			self.abort("Unable to ")
	
		##CAPTURE_BROWSER>
		BROWSER_RET4 = self.ADP_GUI_BROWSER.doTypeText(text=Cache().get(name=input('BROWSER_TEXT_4')), timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=None, xpath=input('BROWSER_TEXT_BY_4'), linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET4:
			self.abort("Unable to ")
	
		##CAPTURE_BROWSER>
		BROWSER_RET5 = self.ADP_GUI_BROWSER.doTypeText(text=Cache().get(name=input('BROWSER_TEXT_5')), timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=None, xpath=input('BROWSER_TEXT_BY_5'), linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET5:
			self.abort("Unable to ")
	
		##CAPTURE_BROWSER>
		BROWSER_RET6 = self.ADP_GUI_BROWSER.doWaitVisibleClickElement(timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=None, xpath=input('BROWSER_TEXT_BY_6'), linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET6:
			self.abort("Unable to ")
	
		self.step1.setPassed("test terminated")

def cleanup(self, aborted):
	if aborted: self.step1.setFailed(aborted)
]]></testdefinition>
<testdevelopment>1488022018.435683</testdevelopment>
</file>