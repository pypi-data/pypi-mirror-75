<?xml version="1.0" encoding="utf-8" ?>
<file>
<properties><descriptions><description><value>admin</value><key>author</key></description><description><value>28/03/2016 20:31:07</value><key>creation date</key></description><description><value>Just a basic sample.</value><key>summary</key></description><description><value>None.</value><key>prerequisites</key></description><description><value><comments /></value><key>comments</key></description><description><value>myplugins</value><key>libraries</key></description><description><value>myplugins</value><key>adapters</key></description><description><value>Writing</value><key>state</key></description><description><value>TESTCASE</value><key>name</key></description><description><value>REQ_01</value><key>requirement</key></description></descriptions><inputs-parameters><parameter><type>json</type><name>AGENT_ANDROID</name><description /><value>{"name": "", "type": "adb"}</value><color /><scope>local</scope></parameter><parameter><type>json</type><name>AGENT_GUI</name><description /><value>{"name": "", "type": "sikulixserver"}</value><color /><scope>local</scope></parameter><parameter><type>json</type><name>AGENT_GUI_BROWSER</name><description /><value>{"name": "", "type": "selenium3server"}</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>ANDROID_CACHE_13</name><description>Find the login on the screen and save it on the cache</description><value>pin</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>ANDROID_PKG_8</name><description>Force to stop the authenticator mobile</description><value>com.google.android.apps.authenticator2</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>ANDROID_UI_DESCR_9</name><description /><value>Authenticator</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>ANDROID_UI_RES_13</name><description /><value>com.google.android.apps.authenticator2:id/pin_value</value><color /><scope>local</scope></parameter><parameter><type>alias</type><name>ANDROID_UI_TXT_10</name><description /><value>GOOGLE_LOGIN</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>ANDROID_UI_TXT_9</name><description /><value>Authenticator</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_15</name><description>Type the code pin on the web page</description><value>pin</value><color /><scope>local</scope></parameter><parameter><type>alias</type><name>BROWSER_TEXT_2</name><description>Type the login</description><value>GOOGLE_LOGIN</value><color /><scope>local</scope></parameter><parameter><type>alias</type><name>BROWSER_TEXT_4</name><description>Type the password</description><value>GOOGLE_PWD</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_1</name><description>Wait and click on the login button</description><value>gb_70</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_15</name><description>Type the code pin on the web page</description><value>totpPin</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_16</name><description>Valid on the page</description><value>submit</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_2</name><description>Type the login</description><value>Email</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_3</name><description>Click on the next button</description><value>next</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_4</name><description>Type the password</description><value>Passwd</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>BROWSER_TEXT_BY_5</name><description>Click on the signin button</description><value>signIn</value><color /><scope>local</scope></parameter><parameter><type>bool</type><name>DEBUG</name><description /><value>False</value><color /><scope>local</scope></parameter><parameter><type>int</type><name>FWK_WAIT_11</name><description /><value>3</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>GOOGLE_LOGIN</name><description>Type the login</description><value /><color /><scope>local</scope></parameter><parameter><type>str</type><name>GOOGLE_PWD</name><description>Type the password</description><value /><color /><scope>local</scope></parameter><parameter><type>snapshot-image</type><name>IMG_12</name><description>Find the begin of the chrono</description><value>iVBORw0KGgoAAAANSUhEUgAAAC4AAAAuCAIAAADY27xgAAAAA3NCSVQICAjb4U/gAAAACXBIWXMAAA7EAAAOxAGVKw4bAAADq0lEQVRYhe2YTWhcVRTH//d9zryZyaTT6WRCCC3GNK0tZKWLhmIFwW500Z0guKiuBMVFwV1LN6V000IpSEE3FgVBBIu4kOjGFoqKaERbk36lTZk2EzuTmTfv697rwqLpe/e9d1+ciV3kv3znvnt+78y5d845xPM8PBlS/m+Af7WJItImikjaOt6hnK+4bL5DF+2g7XNTIZoCxjGSU6ZK2kheNRQycJQHDp1tuF833PnVwGEAOEAOjpoOxbf3HQAqIeOWOlM1XhrNPV1UCcnARCTvlYce++imfXHJafk8ZDpYN5c99v2Kv/ahqWBf1Tg8UXiqoEnySEXluwfuqd86DZcJrRwIIhaX4Zv73uWm9/qOwms78prET5aCQjn/YMH+8IYdDsXj6kZZAAAOxfsL3Z8fekf3DpWNlCOSZA4YP321k8pBOYLEFZeb/pGfWs2YoKajUM7PL9ifLTrJHAACzr0UL/ilFRyba8cFLwVltuFeuGWnuQAeRSUVGD+s+GevdXn8SjHKskvPXO3S9P0fofgSyBy4uORcWo49sGKU8wt2MzXoa1A8JkUdcJz7o9uL+UQByh2bfnXPkeQAQDmXjB+Am10623BlUb6460hHBAACBleahQGf3+lRUcaEUXzG46gTds9CjvlOcL1D01Gud4KGI1iXoFWZpF0jj+LHFUHyhlF+bweRP5kUySfK32LAXCtIR7nRpci4dTtjVADc7dFouoRR/vQYMhYbybe+UG2fOZFghlHs7Bt3sr/iMsGtGEZRN6TCVAmiVUPYc0nbCBZLJWaEJex4NL8RKBVDida/Ycc7S9p6SuSMmiwJqswwyq4h3VIHC6MSTG/Ro8/DKFsNsqe8no5EXsM6mR6WQCGEvDyWG2hY9m8zh3WBB0GSPl8zxy11QBwFlRwazwv7IwGKrpA3JqwBHaQX6+ZkSZwAYo8v1Mz9NaPvHPWc8uaEFWcVo2gKeXeqONbXOyan4L1nSpX4bijWMJJTT0yXq2Z/aAwF70wVn6voCV10kqfJknZyeqie+680lkre3ll8ZSyX3M2nt++LdnB8blVY7MioZipHdhdnqkbqVEFqktAL+Me37E9u91az1AMawYGa+dZkoZ6Xuhpkhxqc83sO+/R278slp50GpBPMbDNe3W7tLWuK9IhFFuUfII/h0rJ3pen92vIbDqMcPuemQhSCgkb2lPVnK8a+qlExSKY5T2aUkDzK2wFzGXSCgkYsVT4E/Ubpr56gCeUmikh/ARFAiuShMJ9BAAAAAElFTkSuQmCC</value><color /><scope>local</scope></parameter><parameter><type>float</type><name>IMG_12_SIMILAR</name><description /><value>0.9</value><color /><scope>local</scope></parameter><parameter><type>snapshot-image</type><name>IMG_17</name><description>Find the Google logo on the screen</description><value></value><color /><scope>local</scope></parameter><parameter><type>float</type><name>IMG_17_SIMILAR</name><description /><value>0.6</value><color /><scope>local</scope></parameter><parameter><type>float</type><name>TIMEOUT_ANDROID</name><description /><value>15.0</value><color /><scope>local</scope></parameter><parameter><type>float</type><name>TIMEOUT_FWK</name><description /><value>30.0</value><color /><scope>local</scope></parameter><parameter><type>float</type><name>TIMEOUT_GUI</name><description /><value>65.0</value><color /><scope>local</scope></parameter><parameter><type>float</type><name>TIMEOUT_GUI_BROWSER</name><description /><value>40.0</value><color /><scope>local</scope></parameter></inputs-parameters><agents><agent><name>AGENT_ANDROID</name><description /><value /><type>adb</type></agent><agent><name>AGENT_GUI</name><description /><value /><type>sikulixserver</type></agent><agent><name>AGENT_GUI_BROWSER</name><description /><value /><type>seleniumserver</type></agent></agents><probes><probe><active>False</active><args /><name>probe01</name><type>default</type></probe></probes><outputs-parameters><parameter><color /><description /><type>float</type><name>TIMEOUT</name><value>1.0</value><scope>local</scope></parameter></outputs-parameters></properties>
<testdefinition><![CDATA[
def description(self):
	# testcase description
	self.setPurpose(purpose="GUI_Automation_Capture")

	# steps description
	self.step1 = self.addStep(expected="Action(s) executed with success", description="Wait and click on the login button\n- Type the login\n- Click on the next button\n- Type the password\n- Click on the signin button\n- Wake up and unlock the mobile phone\n- Click on home button\n- Force to stop the authenticator mobile\n- Find the Google Authenticator application and tap on it\n- Find the login on the screen\n- Find the begin of the chrono\n- Find the login on the screen and save it on the cache\n- Sleep the device\n- Type the code pin on the web page\n- Valid on the page\n- Find the Google logo on the screen", summary="Wait and click on the login button\n- Type the login\n- Click on the next button\n- Type the password\n- Click on the signin button\n- Wake up and unlock the mobile phone\n- Click on home button\n- Force to stop the authenticator mobile\n- Find the Google Authenticator application and tap on it\n- Find the login on the screen\n- Find the begin of the chrono\n- Find the login on the screen and save it on the cache\n- Sleep the device\n- Type the code pin on the web page\n- Valid on the page\n- Find the Google logo on the screen", enabled=True)

def prepare(self):
	# adapters and libraries definitions
	self.ADP_GUI = SutAdapters.GUI.Sikuli(parent=self, agent=input('AGENT_GUI'), debug=input('DEBUG'))
	self.ADP_GUI_BROWSER = SutAdapters.GUI.Selenium(parent=self, agent=input('AGENT_GUI_BROWSER'), debug=input('DEBUG'), navigId=Cache().get(name='selenium-navig-id'))
	self.ADP_ANDROID = SutAdapters.GUI.Adb(parent=self, agent=input('AGENT_ANDROID'), debug=input('DEBUG'))

	

def definition(self):
	if self.step1.isEnabled():
		self.step1.start()
	
		##CAPTURE_BROWSER>Wait and click on the login button
		BROWSER_RET1 = self.ADP_GUI_BROWSER.doWaitClickElement(timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=input('BROWSER_TEXT_BY_1'), xpath=None, linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET1:
			self.abort("Unable to wait and click on the login button")
	
		##CAPTURE_BROWSER>Type the login
		BROWSER_RET2 = self.ADP_GUI_BROWSER.doTypeText(text=input('BROWSER_TEXT_2'), timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=input('BROWSER_TEXT_BY_2'), xpath=None, linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET2:
			self.abort("Unable to type the login")
	
		##CAPTURE_BROWSER>Click on the next button
		BROWSER_RET3 = self.ADP_GUI_BROWSER.doClickElement(timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=input('BROWSER_TEXT_BY_3'), xpath=None, linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET3:
			self.abort("Unable to click on the next button")
	
		##CAPTURE_BROWSER>Type the password
		BROWSER_RET4 = self.ADP_GUI_BROWSER.doTypeText(text=input('BROWSER_TEXT_4'), timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=input('BROWSER_TEXT_BY_4'), xpath=None, linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET4:
			self.abort("Unable to type the password")
	
		##CAPTURE_BROWSER>Click on the signin button
		BROWSER_RET5 = self.ADP_GUI_BROWSER.doWaitClickElement(timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=input('BROWSER_TEXT_BY_5'), xpath=None, linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET5:
			self.abort("Unable to click on the signin button")
	
		##CAPTURE_ANDROID>Wake up and unlock the mobile phone
		ANDROID_RET6 = self.ADP_ANDROID.doWakeupUnlock(timeout=input('TIMEOUT_ANDROID'))
		if not ANDROID_RET6:
			self.abort("Unable to wake up and unlock the mobile phone")
	
		##CAPTURE_ANDROID>Click on home button
		actionId = self.ADP_ANDROID.typeShortcut(shortcut=SutAdapters.GUI.ADB_KEY_HOME)
		if not self.ADP_ANDROID.isActionAccepted(timeout=input('TIMEOUT_ANDROID'), actionId=actionId):
			self.abort("Unable to click on home button")
	
		##CAPTURE_ANDROID>Force to stop the authenticator mobile
		actionId = self.ADP_ANDROID.stopApplication(packageName=input('ANDROID_PKG_8'))
		if not self.ADP_ANDROID.isActionAccepted(timeout=input('TIMEOUT_ANDROID'), actionId=actionId):
			self.abort("Unable to force to stop the authenticator mobile")
	
		##CAPTURE_ANDROID>Find the Google Authenticator application and tap on it
		ANDROID_RET9 = self.ADP_ANDROID.doWaitClickElement(text=input('ANDROID_UI_TXT_9'),description=input('ANDROID_UI_DESCR_9'), timeout=input('TIMEOUT_ANDROID'))
		if not ANDROID_RET9:
			self.abort("Unable to find the google authenticator application and tap on it")
	
		##CAPTURE_ANDROID>Find the login on the screen
		actionId = self.ADP_ANDROID.waitElement(text=input('ANDROID_UI_TXT_10'), timeout=input('TIMEOUT_ANDROID'))
		if not self.ADP_ANDROID.isActionAccepted(timeout=input('TIMEOUT_ANDROID'), actionId=actionId):
			self.abort("Unable to find the login on the screen")
	
		##CAPTURE_FRAMEWORK>
		self.wait(timeout=input('FWK_WAIT_11'))
	
		##CAPTURE>Find the begin of the chrono
		actionId = self.ADP_GUI.waitImage( img=input('IMG_12'), description="Find the begin of the chrono", similar=input('IMG_12_SIMILAR'), timeout=input('TIMEOUT_GUI') )
		APP_RET12 = self.ADP_GUI.isActionAccepted(timeout=input('TIMEOUT_GUI'), actionId=actionId)
		if APP_RET12 is None:
			self.abort("Unable to find the begin of the chrono")
	
		##CAPTURE_ANDROID>Find the login on the screen and save it on the cache
		actionId = self.ADP_ANDROID.getTextElement(resourceId=input('ANDROID_UI_RES_13'))
		ANDROID_RET13 = self.ADP_ANDROID.isActionAccepted(timeout=input('TIMEOUT_ANDROID'), actionId=actionId)
		if ANDROID_RET13 is None:
			self.abort("Unable to find the login on the screen and save it on the cache")
		else:
			Cache().set(name=input('ANDROID_CACHE_13'), data=ANDROID_RET13.get('GUI', 'value'))
	
		##CAPTURE_ANDROID>Sleep the device
		actionId = self.ADP_ANDROID.sleep()
		if not self.ADP_ANDROID.isActionAccepted(timeout=input('TIMEOUT_ANDROID'), actionId=actionId):
			self.abort("Unable to sleep the device")
	
		##CAPTURE_BROWSER>Type the code pin on the web page
		BROWSER_RET15 = self.ADP_GUI_BROWSER.doTypeText(text=Cache().get(name=input('BROWSER_TEXT_15')), timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=input('BROWSER_TEXT_BY_15'), xpath=None, linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET15:
			self.abort("Unable to type the code pin on the web page")
	
		##CAPTURE_BROWSER>Valid on the page
		BROWSER_RET16 = self.ADP_GUI_BROWSER.doWaitClickElement(timeout=input('TIMEOUT_GUI_BROWSER'), name=None, tagName=None, className=None, id=input('BROWSER_TEXT_BY_16'), xpath=None, linkText=None, partialLinkText=None, cssSelector=None)
		if not BROWSER_RET16:
			self.abort("Unable to valid on the page")
	
		##CAPTURE>Find the Google logo on the screen
		actionId = self.ADP_GUI.waitImage( img=input('IMG_17'), description="Find the Google logo on the screen", similar=input('IMG_17_SIMILAR'), timeout=input('TIMEOUT_GUI') )
		APP_RET17 = self.ADP_GUI.isActionAccepted(timeout=input('TIMEOUT_GUI'), actionId=actionId)
		if APP_RET17 is None:
			self.abort("Unable to find the google logo on the screen")
	
		self.step1.setPassed("test terminated")

def cleanup(self, aborted):
	if aborted: self.step1.setFailed(aborted)
]]></testdefinition>
<testdevelopment>1459189867.03244</testdevelopment>
</file>