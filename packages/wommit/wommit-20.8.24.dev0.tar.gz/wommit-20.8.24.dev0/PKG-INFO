Metadata-Version: 2.1
Name: wommit
Version: 20.8.24.dev0
Summary: A tool for intuitively writing git commits that adhere to the Conventional Commits standards.
Home-page: https://github.com/bkkp/wommit
License: MIT
Keywords: wommit,git,emoji,github,commit
Author: Zylvian
Author-email: jovlisen@gmail.com
Requires-Python: >=3.8,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Requires-Dist: click (>=7.1.2,<8.0.0)
Requires-Dist: emojis (>=0.5.1,<0.6.0)
Requires-Dist: falcon (>=2.0.0,<3.0.0)
Requires-Dist: gitpython (>=3.1.3,<4.0.0)
Requires-Dist: keyring (>=21.2.1,<22.0.0)
Requires-Dist: prompt_toolkit (>=3.0.5,<4.0.0)
Requires-Dist: pycalver (>=202007.36,<202008.0)
Requires-Dist: questionary (>=1.5.2,<2.0.0)
Requires-Dist: requests (>=2.24.0,<3.0.0)
Requires-Dist: webtest (>=2.0.35,<3.0.0)
Project-URL: Repository, https://github.com/bkkp/wommit
Description-Content-Type: text/markdown

# Wommit

**W**rite c**ommit** **t**ool

---

[![PyCalVer 20.08.0024-dev][version_img]][version_ref]
[![PyPI Releases][pypi_img]][pypi_ref]

#### A package for intuitively formatting appealing commmit messages with emojis, using an assortment of different methods.

![CHECK ME OUT](https://i.imgur.com/VIXvQXY.png)

---

### Commands

`wommit ...`:

- `c`: Commit all staged files using an intuitive drop-down menu or a fast autocompletion prompt.

  *Options:*
  
  - `-m`: Use menu mode, overriding default.

  - `-e`: Use autocompletion mode, overriding default.
  
  - `-m [MESSAGE]`: Write a manual commit message, and commits if it's in the accepted format, as well as converting known types to emojis. 
  
  - `-g`: Use global settings and data instead of local.

  - `--test`:  Test either of the modes without commiting.
  
  
- `check`: Manually check previously added commit. 

  *Options:*

  - `-id [HASH]`: Check a commit message with the specified ID.
  
  - `-ids [HASH1] [HASH2]`: Check all commit messages between two IDs (newest ID first).

  - `-m [MESSAGE]`:  Check if the given string passes the check.
  
  - `-l`:  Check all local commits that have not been pushed.

- `configure ...`: Opens a prompt for adding/removing types and scopes.

    - `e`: Edit current types and scopes.
    
    - `p`: Prints all types and scopes.
    
    - `s`: Edit settings.

    *Options:*

  - `-g`: Edit global settings.
  
  - `-t`: Manually test the functionality.
  
 - `format`: Pastes the format a message needs to meet in order to pass the check.

[version_img]: https://img.shields.io/static/v1.svg?label=Wommit&message=20.08.0024-dev&color=blue
[version_ref]: https://pypi.org/project/wommit/
[pypi_img]: https://img.shields.io/badge/PyPI-wheels-green.svg
[pypi_ref]: https://pypi.org/project/wommit/


