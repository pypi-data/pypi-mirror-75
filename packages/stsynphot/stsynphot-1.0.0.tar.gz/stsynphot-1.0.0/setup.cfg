[tool:pytest]
minversion = 4
testpaths = "stsynphot" "docs"
norecursedirs = build docs/_build stsynphot/data stsynphot/commissioning
astropy_header = true
addopts = --doctest-rst --doctest-ignore-import-errors
doctest_plus = enabled
text_file_format = rst
xfail_strict = true
filterwarnings = 
	ignore:numpy.ufunc size changed:RuntimeWarning
	ignore:.*Column disp option
	ignore:BlackBody provides the same capabilities
	ignore:The MexicanHat1D class is deprecated

[metadata]
name = stsynphot
description = Synthetic photometry for HST/JWST
long_description = Synthetic photometry utilities for HST/JWST
long_description_content_type = text/plain
keywords = astronomy, astrophysics, synthetic, photometry, HST, JWST
author = STScI
author_email = help@stsci.edu
license = BSD
license_file = LICENSE
url = https://www.github.com/spacetelescope/stsynphot_refactor
edit_on_github = False
github_project = spacetelescope/stsynphot_refactor
classifiers = 
	Intended Audience :: Science/Research
	License :: OSI Approved :: BSD License
	Operating System :: OS Independent
	Programming Language :: Python :: 3
	Programming Language :: Python :: Implementation :: CPython
	Topic :: Scientific/Engineering :: Astronomy
	Topic :: Scientific/Engineering :: Physics

[options]
packages = find:
zip_safe = False
setup_requires = 
	setuptools_scm
install_requires = 
	numpy>=1.16
	astropy>=3
	synphot
	beautifulsoup4
python_requires = >=3.6

[options.extras_require]
all = 
	scipy
	matplotlib
test = 
	pytest-astropy
	ci-watson
docs = 
	sphinx-astropy

[options.package_data]
stsynphot = data/*.*, data/wavecats/*
stsynphot.tests = data/*
stsynphot.commissioning.tests = data/*

[flake8]
ignore = I100,I201,W504
exclude = spark.py,spparser.py

[coverage:run]
source = stsynphot
omit = 
	stsynphot/_astropy_init*
	stsynphot/tests/*
	stsynphot/*/tests/*
	stsynphot/*/*/tests/*
	stsynphot/version*
	*/stsynphot/_astropy_init*
	*/stsynphot/tests/*
	*/stsynphot/*/tests/*
	*/stsynphot/*/*/tests/*
	*/stsynphot/version*

[coverage:report]
exclude_lines = 
	pragma: no cover
	except ImportError
	raise AssertionError
	raise NotImplementedError
	def main\(.*\):
	pragma: py{ignore_python_version}
	def _ipython_key_completions_

[egg_info]
tag_build = 
tag_date = 0

