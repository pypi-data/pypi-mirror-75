2020-07-29 15:58:58 [chatbot] [chatbot.py:211] [INFO] [725240]: add "re.split" as the answer to "test"
2020-07-29 15:58:58 [chatbot] [chatbot.py:211] [INFO] [725240]: add "早餐当中吃鸡蛋，的确是对身体有很大的益处" as the answer to "早上吃鸡蛋对身体好吗"
2020-07-29 15:58:58 [chatbot] [chatbot.py:87] [INFO] [725240]: the processing the statement "test"
2020-07-29 15:58:58 [chatbot] [chatbot.py:92] [INFO] [725240]: after the preprocessor "chatbot.preprocessor.clean_whitespace" processing, the statement becomes "test"
2020-07-29 15:58:58 [chatbot] [chatbot.py:147] [INFO] [725240]: not processing the statement using "chatbot.adapter.WhatCanIDo"
2020-07-29 15:58:58 [chatbot] [chatbot.py:147] [INFO] [725240]: not processing the statement using "chatbot.adapter.DomainManager"
2020-07-29 15:58:58 [chatbot] [chatbot.py:103] [INFO] [725240]: "chatbot.adapter.BestMatch" adapter starts matching
2020-07-29 15:58:58 [chatbot] [adapter.py:145] [INFO] [725240]: the keyword of the "test" statement is "test"
2020-07-29 15:58:58 [chatbot] [adapter.py:167] [INFO] [725240]: use keywords to find "1" pieces of data and use it for comparison
2020-07-29 15:58:58 [chatbot] [chatbot.py:106] [INFO] [725240]: "chatbot.adapter.BestMatch" adapter select "1" answers
2020-07-29 15:58:58 [chatbot] [chatbot.py:110] [INFO] [725240]: "chatbot.adapter.BestMatch" adapter select the answer to the "test" question as a reply, the confidence is 1.0
2020-07-29 15:58:58 [chatbot] [chatbot.py:117] [INFO] [725240]: the similarity is 1.0 higher than the maximum_similarity_threshold parameter, stop matching.
2020-07-29 15:58:58 [chatbot] [conversation.py:116] [INFO] [725240]: Call the function "re.split" to get the answer, all the parameters of the function are "OrderedDict([('pattern', ':'), ('string', '1:2:3:4'), ('maxsplit', 0), ('flags', 0)])"
2020-07-29 15:58:58 [chatbot] [chatbot.py:142] [INFO] [725240]: finally the response of the "test" statement is "{'text': ['1', '2', '3', '4'], 'context': {'domain': False}}"
2020-07-29 15:58:58 [chatbot] [chatbot.py:87] [INFO] [725240]: the processing the statement "早上吃鸡蛋对身体好吗"
2020-07-29 15:58:58 [chatbot] [chatbot.py:92] [INFO] [725240]: after the preprocessor "chatbot.preprocessor.clean_whitespace" processing, the statement becomes "早上吃鸡蛋对身体好吗"
2020-07-29 15:58:58 [chatbot] [chatbot.py:147] [INFO] [725240]: not processing the statement using "chatbot.adapter.WhatCanIDo"
2020-07-29 15:58:58 [chatbot] [chatbot.py:147] [INFO] [725240]: not processing the statement using "chatbot.adapter.DomainManager"
2020-07-29 15:58:58 [chatbot] [chatbot.py:103] [INFO] [725240]: "chatbot.adapter.BestMatch" adapter starts matching
2020-07-29 15:58:58 [chatbot] [adapter.py:145] [INFO] [725240]: the keyword of the "早上吃鸡蛋对身体好吗" statement is "鸡蛋,早上,身体"
2020-07-29 15:58:58 [chatbot] [adapter.py:167] [INFO] [725240]: use keywords to find "1" pieces of data and use it for comparison
2020-07-29 15:58:58 [chatbot] [chatbot.py:106] [INFO] [725240]: "chatbot.adapter.BestMatch" adapter select "1" answers
2020-07-29 15:58:58 [chatbot] [chatbot.py:110] [INFO] [725240]: "chatbot.adapter.BestMatch" adapter select the answer to the "早上吃鸡蛋对身体好吗" question as a reply, the confidence is 1.0
2020-07-29 15:58:58 [chatbot] [chatbot.py:117] [INFO] [725240]: the similarity is 1.0 higher than the maximum_similarity_threshold parameter, stop matching.
2020-07-29 15:58:58 [chatbot] [chatbot.py:142] [INFO] [725240]: finally the response of the "早上吃鸡蛋对身体好吗" statement is "{'text': '早餐当中吃鸡蛋，的确是对身体有很大的益处', 'context': {'domain': False}}"
2020-07-29 15:58:58 [chatbot] [chatbot.py:239] [INFO] [725240]: delete "早上吃鸡蛋对身体好吗" question data from the database table
2020-07-29 15:58:58 [chatbot] [chatbot.py:211] [INFO] [725240]: add "re.split" as the answer to "domain test"
2020-07-29 15:58:58 [chatbot] [chatbot.py:87] [INFO] [725240]: the processing the statement "domain test"
2020-07-29 15:58:58 [chatbot] [chatbot.py:92] [INFO] [725240]: after the preprocessor "chatbot.preprocessor.clean_whitespace" processing, the statement becomes "domain test"
2020-07-29 15:58:58 [chatbot] [chatbot.py:147] [INFO] [725240]: not processing the statement using "chatbot.adapter.WhatCanIDo"
2020-07-29 15:58:58 [chatbot] [chatbot.py:147] [INFO] [725240]: not processing the statement using "chatbot.adapter.DomainManager"
2020-07-29 15:58:58 [chatbot] [chatbot.py:103] [INFO] [725240]: "chatbot.adapter.BestMatch" adapter starts matching
2020-07-29 15:58:58 [chatbot] [adapter.py:145] [INFO] [725240]: the keyword of the "domain test" statement is "domain,test"
2020-07-29 15:58:58 [chatbot] [adapter.py:167] [INFO] [725240]: use keywords to find "2" pieces of data and use it for comparison
2020-07-29 15:58:58 [chatbot] [chatbot.py:106] [INFO] [725240]: "chatbot.adapter.BestMatch" adapter select "1" answers
2020-07-29 15:58:58 [chatbot] [chatbot.py:110] [INFO] [725240]: "chatbot.adapter.BestMatch" adapter select the answer to the "domain test" question as a reply, the confidence is 1.0
2020-07-29 15:58:58 [chatbot] [chatbot.py:117] [INFO] [725240]: the similarity is 1.0 higher than the maximum_similarity_threshold parameter, stop matching.
2020-07-29 15:58:58 [chatbot] [chatbot.py:142] [INFO] [725240]: finally the response of the "domain test" statement is "{'text': '请提供pattern', 'context': {'id': 2, 'question': 'domain test', 'reference_question': 'domain test', 'confidence': 1.0, 'answer': 're.split', 'category': '其他', 'type': 1, 'parameters': OrderedDict([('pattern', None), ('string', None), ('maxsplit', 0), ('flags', 0)]), 'extractor': 'chatbot.extractor.Extractor', 'need_extract_parameter': 'pattern', 'need_extract_parameter_count': 0, 'domain': True}}"
2020-07-29 15:58:58 [chatbot] [chatbot.py:87] [INFO] [725240]: the processing the statement ":"
2020-07-29 15:58:58 [chatbot] [chatbot.py:92] [INFO] [725240]: after the preprocessor "chatbot.preprocessor.clean_whitespace" processing, the statement becomes ":"
2020-07-29 15:58:58 [chatbot] [chatbot.py:147] [INFO] [725240]: not processing the statement using "chatbot.adapter.WhatCanIDo"
2020-07-29 15:58:58 [chatbot] [chatbot.py:103] [INFO] [725240]: "chatbot.adapter.DomainManager" adapter starts matching
2020-07-29 15:58:58 [chatbot] [adapter.py:243] [INFO] [725240]: get the value of the "pattern" parameter using "chatbot.extractor.Extractor.extract_general" method
2020-07-29 15:58:58 [chatbot] [adapter.py:249] [INFO] [725240]: the value is ":"
2020-07-29 15:58:58 [chatbot] [chatbot.py:106] [INFO] [725240]: "chatbot.adapter.DomainManager" adapter select "1" answers
2020-07-29 15:58:58 [chatbot] [chatbot.py:110] [INFO] [725240]: "chatbot.adapter.DomainManager" adapter select the answer to the "domain test" question as a reply, the confidence is 1.0
2020-07-29 15:58:58 [chatbot] [chatbot.py:117] [INFO] [725240]: the similarity is 1.0 higher than the maximum_similarity_threshold parameter, stop matching.
2020-07-29 15:58:58 [chatbot] [chatbot.py:142] [INFO] [725240]: finally the response of the ":" statement is "{'text': '请提供string', 'context': {'id': 2, 'question': 'domain test', 'reference_question': 'domain test', 'confidence': 1.0, 'answer': 're.split', 'category': '其他', 'type': 1, 'parameters': OrderedDict([('pattern', ':'), ('string', None), ('maxsplit', 0), ('flags', 0)]), 'extractor': 'chatbot.extractor.Extractor', 'need_extract_parameter': 'string', 'need_extract_parameter_count': 0, 'domain': True}}"
2020-07-29 15:58:58 [chatbot] [chatbot.py:87] [INFO] [725240]: the processing the statement "1:2:3"
2020-07-29 15:58:58 [chatbot] [chatbot.py:92] [INFO] [725240]: after the preprocessor "chatbot.preprocessor.clean_whitespace" processing, the statement becomes "1:2:3"
2020-07-29 15:58:58 [chatbot] [chatbot.py:147] [INFO] [725240]: not processing the statement using "chatbot.adapter.WhatCanIDo"
2020-07-29 15:58:58 [chatbot] [chatbot.py:103] [INFO] [725240]: "chatbot.adapter.DomainManager" adapter starts matching
2020-07-29 15:58:58 [chatbot] [adapter.py:243] [INFO] [725240]: get the value of the "string" parameter using "chatbot.extractor.Extractor.extract_general" method
2020-07-29 15:58:58 [chatbot] [adapter.py:249] [INFO] [725240]: the value is "1:2:3"
2020-07-29 15:58:58 [chatbot] [chatbot.py:106] [INFO] [725240]: "chatbot.adapter.DomainManager" adapter select "1" answers
2020-07-29 15:58:58 [chatbot] [chatbot.py:110] [INFO] [725240]: "chatbot.adapter.DomainManager" adapter select the answer to the "domain test" question as a reply, the confidence is 1.0
2020-07-29 15:58:58 [chatbot] [chatbot.py:117] [INFO] [725240]: the similarity is 1.0 higher than the maximum_similarity_threshold parameter, stop matching.
2020-07-29 15:58:58 [chatbot] [conversation.py:116] [INFO] [725240]: Call the function "re.split" to get the answer, all the parameters of the function are "OrderedDict([('pattern', ':'), ('string', '1:2:3'), ('maxsplit', 0), ('flags', 0)])"
2020-07-29 15:58:58 [chatbot] [chatbot.py:142] [INFO] [725240]: finally the response of the "1:2:3" statement is "{'text': ['1', '2', '3'], 'context': {'domain': False}}"
