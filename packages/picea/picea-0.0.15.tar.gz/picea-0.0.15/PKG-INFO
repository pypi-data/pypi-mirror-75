Metadata-Version: 2.1
Name: picea
Version: 0.0.15
Summary: A lightweight python library for working with trees and biological sequence collections
Home-page: https://github.com/holmrenser/picea
Author: Rens Holmer
Author-email: rens.holmer@wur.nl
License: MIT
Description: _picea_
        =======
        
        Lightweight python library for working with trees and sequence collections
        
        ![tests](https://github.com/holmrenser/picea/workflows/tests/badge.svg)
        ![docs](https://github.com/holmrenser/picea/workflows/docs/badge.svg?branch=master)
        [![Coverage Status](https://coveralls.io/repos/github/holmrenser/picea/badge.svg?branch=master)](https://coveralls.io/github/holmrenser/picea?branch=master)
        [![PyPI version](https://badge.fury.io/py/picea.svg)](https://badge.fury.io/py/picea)
        [![PyPI pyversions](https://img.shields.io/pypi/pyversions/picea.svg)](https://pypi.python.org/pypi/ansicolortags/)
        [![PyPI status](https://img.shields.io/pypi/status/picea.svg)](https://pypi.python.org/pypi/ansicolortags/)
        
        
        
        ```
        pip install picea
        ```
        
        ![example figure](https://github.com/holmrenser/picea/raw/master/docs/example1.png)
        
        The above figure can be generated with the following code
        
        ```python
        from picea import Tree
        import matplotlib.pyplot as plt
        
        newick = '(((a,b),(c,d)),e)'
        tree = Tree.from_newick(newick)
        
        fig, (ax1, ax2) = plt.subplots(ncols = 2, figsize = (10, 4))
        
        #left-to-right layout with direct links
        tree.layout(ltr = True)
        for node1, node2 in tree.links:
            ax1.plot(
                (node1.x, node2.x),
                (node1.y, node2.y),
                c = 'k'
            )
        for leaf in tree.leaves:
            ax1.text(
                leaf.x + .1, 
                leaf.y - .1, 
                leaf.name,
                fontsize = 18
            )
        
        #right-to-left layout with square links
        tree.layout(ltr = False)
        for node1, node2 in tree.links:
            ax2.plot(
                (node1.x, node1.x),
                (node1.y, node2.y)
            )
            ax2.plot(
                (node1.x, node2.x),
                (node2.y, node2.y)
            )
        
        #clean up plots
        ax1.set_xlim((-.5, 3.5))
        ax2.set_xlim((-3.5, .5))
        for ax in (ax1,ax2):
            ax.set_xticks([],[])
            ax.set_yticks([],[])
        ```
Platform: Windows
Platform: Windows Cygwin
Platform: GNU/Linux
Platform: MacOS
Classifier: Development Status :: 3 - Alpha
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Utilities
Description-Content-Type: text/markdown
