<?xml version="1.0" encoding="utf-8" ?>
<file>
<properties><descriptions><description><value>admin</value><key>author</key></description><description><value>10/03/2017 08:50:46</value><key>creation date</key></description><description><value>Just a basic sample.</value><key>summary</key></description><description><value>None.</value><key>prerequisites</key></description><description><value><comments /></value><key>comments</key></description><description><value>myplugins</value><key>libraries</key></description><description><value>myplugins</value><key>adapters</key></description><description><value>Writing</value><key>state</key></description><description><value>TESTCASE</value><key>name</key></description><description><value>REQ_01</value><key>requirement</key></description></descriptions><inputs-parameters><parameter><type>bool</type><name>DEBUG</name><description /><value>False</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>FWK_ASK_8</name><description /><value>Hello, your name ?</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>FWK_ASK_KEY_8</name><description /><value>MY_NAME</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>FWK_CACHE_KEY_3</name><description /><value>MY_KEY</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>FWK_CACHE_VALUE_3</name><description /><value>hello</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>FWK_CHECK_6</name><description /><value>hello</value><color /><scope>local</scope></parameter><parameter><type>alias</type><name>FWK_CHECK_7</name><description /><value>MY_ALIAS</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>FWK_CHECK_KEY_6</name><description /><value>MY_KEY</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>FWK_CHECK_KEY_7</name><description /><value>MY_KEY</value><color /><scope>local</scope></parameter><parameter><type>alias</type><name>FWK_TEXT_1</name><description /><value>MY_ALIAS</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>FWK_TEXT_2</name><description /><value>hello world</value><color /><scope>local</scope></parameter><parameter><type>int</type><name>FWK_WAIT_5</name><description /><value>3</value><color /><scope>local</scope></parameter><parameter><type>str</type><name>MY_ALIAS</name><description /><value>ll</value><color /><scope>local</scope></parameter><parameter><type>float</type><name>TIMEOUT_FWK</name><description /><value>30.0</value><color /><scope>local</scope></parameter></inputs-parameters><agents /><probes><probe><active>False</active><args /><name>probe01</name><type>default</type></probe></probes><outputs-parameters><parameter><color /><description /><type>float</type><name>TIMEOUT</name><value>1.0</value><scope>local</scope></parameter></outputs-parameters></properties>
<testdefinition><![CDATA[
def description(self):
	# testcase description
	self.setPurpose(purpose="Testcase generated by test assistant")

	# steps description
	self.step1 = self.addStep(expected="Action(s) executed with success", description="", summary="", enabled=True)

def prepare(self):
	# adapters and libraries definitions
	pass

	

def definition(self):
	if self.step1.isEnabled():
		self.step1.start()
	
		##CAPTURE_FRAMEWORK>
		self.info(txt=input('FWK_TEXT_1'))
	
		##CAPTURE_FRAMEWORK>
		self.warning(txt=input('FWK_TEXT_2'))
	
		##CAPTURE_FRAMEWORK>
		Cache().set(flag=True, name=input('FWK_CACHE_KEY_3'),data=input('FWK_CACHE_VALUE_3'))
	
		##CAPTURE_USER> 
		
		##CAPTURE_USER_END>
		##CAPTURE_FRAMEWORK>
		self.wait(timeout=input('FWK_WAIT_5'))
	
		##CAPTURE_FRAMEWORK>
		FWK_RET6 = TestOperators.Contains(needle=input('FWK_CHECK_6')).seekIn(haystack=Cache().get(name=input('FWK_CHECK_KEY_6')))
		if not FWK_RET6:
			self.abort("Unable to ")
	
		##CAPTURE_FRAMEWORK>
		FWK_RET7 = TestOperators.Contains(needle=input('FWK_CHECK_7')).seekIn(haystack=Cache().get(name=input('FWK_CHECK_KEY_7')))
		if not FWK_RET7:
			self.abort("Unable to ")
	
		##CAPTURE_FRAMEWORK>
		FWK_RET8 = Interact(self).interact(ask=input('FWK_ASK_8'), timeout=input('TIMEOUT_FWK'), default=None, cache=input('FWK_ASK_KEY_8'))
		if not FWK_RET8:
			self.abort("Unable to ")
	
		##CAPTURE_FRAMEWORK>
		Cache().reset()
	
		self.step1.setPassed("test terminated")

def cleanup(self, aborted):
	if aborted: self.step1.setFailed(aborted)
]]></testdefinition>
<testdevelopment>1489132246.06271</testdevelopment>
</file>