# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2019-04-29 15:49
from __future__ import unicode_literals

from django.db import migrations

def restruct_multiple_answer(apps, schema_editor):
    from django.db import transaction
    Paper = apps.get_model('exam', 'Paper')

    for p in Paper.objects.all():
        ats = {}
        b = 0
        for g in p.content_object.get('groups'):
            for q in g.get('questions'):
                if q.get('type') == 'multiple':
                    ats[q.get('number')] = True
                    ans = q.get('answer')
                    if isinstance(ans, (list, tuple)):
                        if len(ans) > 1:
                            q['answer'] = [''.join(ans)]
                            b += 1
                            print 'concat', p.id, ans
                    else:
                        q['answer'] = [ans]
                        b += 1
                        print p.id, ans
        if b > 0:
            p.save()
            print p.id, 'saved'
        else:
            print p.id

        with transaction.atomic():
            for a in p.answers.all().select_for_update():
                b = 0
                for s in a.detail:
                    ua = s.get('userAnswer')
                    ans = s.get('answer')
                    num = s.get('number')
                    if num in ats and isinstance(ua, (list, tuple)):
                        if len(ua) > 1:
                            s['userAnswer'] = [''.join(ua)]
                            b += 1
                        if len(ans) > 1:
                            s['answer'] = [''.join(ans)]
                            b += 1
                if b > 0:
                    a.save()
                    print p.id, a.id, b


class Migration(migrations.Migration):

    dependencies = [
        ('exam', '0010_auto_20190429_1458'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='answer',
            options={'ordering': ('-create_time',), 'permissions': (('view_all_answer', '\u67e5\u770b\u6240\u6709\u7528\u6237\u7b54\u5377'),), 'verbose_name': '\u7528\u6237\u7b54\u5377', 'verbose_name_plural': '\u7528\u6237\u7b54\u5377'},
        ),
        migrations.RunPython(restruct_multiple_answer)
    ]
