[tox]
envlist =
    py39
    py38
    py37
    py36
    py35
    py27
    pypy
    pypy3
    coverage
    fix_lint
    docs
    package_description
isolated_build = true
minversion = 3.14.0
skip_missing_interpreters = true

[testenv]
description = run the unit tests with pytest under {basepython}
setenv =
    COVERAGE_PROCESS_START = {toxinidir}/.coveragerc
    _COVERAGE_SRC = {envsitepackagesdir}/pytest_print
    py27: PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command
passenv = http_proxy https_proxy no_proxy SSL_CERT_FILE TOXENV
extras = test
deps = pip >= 20.2
commands =
    coverage erase
    coverage run -m pytest \
    --junitxml {toxworkdir}/junit.{envname}.xml \
    {posargs:tests}

    coverage combine
    coverage report --skip-covered --show-missing
    coverage xml -o {toxworkdir}/coverage.{envname}.xml
    coverage html -d {envtmpdir}/htmlcov

[pytest]
addopts = -ra --showlocals
testpaths = tests
xfail_strict = True
junit_family = xunit2

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps =
    {[testenv]deps}
    coverage >= 5
    diff_cover >= 3
skip_install = True
passenv =
    {[testenv]passenv}
    DIFF_AGAINST
setenv =
    COVERAGE_FILE={toxworkdir}/.coverage
commands =
    coverage combine
    coverage report --skip-covered --show-missing
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    python -m diff_cover.diff_cover_tool --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends =
    py39
    py38
    py37
    py36
    py35
    py27
    pypy
    pypy3

[testenv:fix_lint]
basepython = python3.7
passenv = {[testenv]passenv} HOMEPATH PROGRAMDATA
skip_install = true
deps =
    pre-commit >= 1.12.0
description = run static analysis and style check using flake8
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'print("hint: run {envdir}/bin/pre-commit install to add checks as pre-commit hook")'

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 120
known_first_party = pytest_print
known_third_party = pytest,setuptools

[testenv:docs]
description = invoke sphinx-build to build the HTML docs, check that URIs are valid
basepython = python3.7
extras = docs
commands = sphinx-build -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_out" --color -W -bhtml

[testenv:dev]
description = generate a DEV environment
extras = test, docs
usedevelop = True
basepython = python3.7
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'

[testenv:package_description]
changedir = {toxinidir}
description = check that the long description is valid
basepython = python3.7
deps =
    twine >= 1.12.1
    pep517
skip_install = true
commands =
    python -m pep517.build -s -b . -o {envtmpdir}
    twine check {envtmpdir}/*
