#-------- LOCAL CONDITIONS  ---------------------#
# File containing sky brightness should be in pyETC/local_conditions/sky_brightness/
"sky_site": OAN_Ratir_X1.5
#Â Wheter the atmospheric transmission is loaded from a file or computed using the extinction: "file" / "data"
"atmosphere_type": file
# Name of the file for extinction. In pyETC/local_conditions/atmosphere/
"ext_file": OAN_extinction
# Name of the file for atmospheric transmission. In pyETC/local_conditions/atmosphere/
"atm_file": OAN_atm_trans

#-------- TELESCOPE -----------------------------#
#M1 diameter (in m)
"D_M1": 1.3
#M2 diameter (in m)
"D_M2": 0.58
#Factor to take into account additional obscuration such as the spider arms. Simply multiply D_M2 with this factor
"M2_factor": 1.0
#focal_length (in meters)
"focal_length": {
              "DDRAGO-B": 8.124
              "DDRAGO-R": 8.124
              "CAGIRE": 4.874
             }

#FWHM of the optics in arcsec, different for each band 
"Fwhm_psf_opt":{"g": 0.26,"r": 0.26,"i": 0.37,"z": 0.37,"y": 0.37,"J": 0.59,"H": 0.73,"gri": 0.3,"zy": 0.37, "V_bessel": 0.26, "R_bessel": 0.37}

#-------- FILTER -----------------------------#
#Detailed modelisation of the telescope and instrument
#If detailed is 1 then the number of mirrors, lenses, dichroics must be defined as well as
# the camera efficiency, the filer curves
#If detailed == 1: have to define the numbers of mirrors, lenses and dichroics in optics.py
#If detailed == 0: will load a throughput curve
"detailed_trans": 1
#If detailed simulations (detailed ==1). Has to be in pyETC/transmissions/filters
#It corresponds to the transmission of the filter only
"filter_folder": COLIBRI

#-------- optical design ------------------------#
# Set up the optical element in the telescope and each intrument channel.
# Note that the keywords used for defining the instrument channels are free to chose (here: DDRAGO-B, DDRAGO-R and CAGIRE). However they must be reused for the cameras properties below.
# 'telescope' contains all optical elements common for all channels
# For each type of element (i.e 'mirrors', 'lenses'...) must correspond  a folder in pyETC/transmissions/
# These folders contain files in which the transmission are given. For instance here we have one lense N-BaK4 and the file must be  pyETC/transmissions/lenses/N-BaK4.txt
# You can add your own files and folders.
"optical_design": {
    "telescope": {
        "mirrors": {"Al_OHP_unam": 3}
        "lenses": {"N-BaK4": 1}
        "coating": {"template_tel": 4}
        "dichroics": {"template_tel": 1}
        }
    "DDRAGO-B": {
        "coating": {"template_vis": 2}
        "dichroics": {"template_vis": 1}
        "windows": {"template_vis": 1}
        }
    "DDRAGO-R": {
        "lenses": {"internal_trans_tot": 1}
        "coating": {"template_vis": 2}
        "dichroics": {"template_vis": 1}
        "windows": {"template_vis": 1}
        }
    "CAGIRE": {
        "mirrors": {"Au": 2}
        "lenses": {"S-FTM16": 1}
        "coating": {"template_ir": 18}
        }
}

#-------- CAMERA --------------------------------#
# Caracteristics of cameras used for the different channels.
# The keywords VIS1,VIS2,NIR defining the instrument channels must be the same as the ones used for the optical design
"cameras":{
    "DDRAGO-B": {
        # Folder should be in pyETC/transmissions/detectors/
        "camera_type": e2v231_84
        # File should be in pyETC/transmissions/detectors/'camera_type'/
        "sensor": dd_SI_100C
        # Number of photocells on X axis
        "Nphotocell_X": 4096
        # Number of photocells on Y axis
        "Nphotocell_Y": 4096
        # Size of 1 photocell on X axis (in meters)
        "Photocell_SizeX": 15e-6 
        # Size of 1 photocell on Y axis (in meters)
        "Photocell_SizeY": 15e-6 
        # Time required to read all the photocells (in s)
        "ReadoutTime": 6
        # Full well capacity of one photocell (in e-)
        "FWC": 350000
        # Readout Noise (in e-/photocell)
        "RN": 8.0
        # Dark current for one photocell (in e-/photocell/s)
        "DC": 0.001
        # e- to ADU conversion factor
        "gain": 1.5
        # Number of bits for the camera
        "bits": 16}
    "DDRAGO-R": {
        # Folder should be in pyETC/transmissions/detectors/
        "camera_type": e2v231_84
        # File should be in pyETC/transmissions/detectors/'camera_type'/
        "sensor": dd_SI_100C
        # Number of photocells on X axis
        "Nphotocell_X": 4096
        # Number of photocells on Y axis
        "Nphotocell_Y": 4096
        # Size of 1 photocell on X axis (in meters)
        "Photocell_SizeX": 15e-6            
        # Size of 1 photocell on Y axis (in meters)
        "Photocell_SizeY": 15e-6            
        # Time required to read all the photocells (in s)
        "ReadoutTime": 6
        # Full well capacity of one photocell (in e-)
        "FWC": 350000
        # Readout Noise (in e-/photocell)
        "RN": 8.0
        # Dark current for one photocell (in e-/photocell/s)
        "DC": 0.001
        # e- to ADU conversion factor
        "gain": 1.5
        # Number of bits for the camera
        "bits": 16}
    "CAGIRE": {
        # Folder should be in pyETC/transmissions/detectors/
        "camera_type": sofradir
        # File should be in pyETC/transmissions/detectors/'camera_type'/
        "sensor": sofradir_70
        # Number of photocells on X axis
        "Nphotocell_X": 2048
        # Number of photocells on Y axis
        "Nphotocell_Y": 2048
        # Size of 1 photocell on X axis (in meters)
        "Photocell_SizeX": 15e-6            
        # Size of 1 photocell on Y axis (in meters)
        "Photocell_SizeY": 15e-6            
        # Time required to read all the photocells (in s)
        "ReadoutTime": 1.0
        # Full well capacity of one photocell (in e-)
        "FWC": 80000
        # Readout Noise (in e-/photocell)
        "RN": 20.0
        # Dark current for one photocell (in e-/photocell/s)
        "DC": 0.0027
        # e- to ADU conversion factor
        "gain": 1.3
        # Number of bits for the camera
        "bits": 16}
}

